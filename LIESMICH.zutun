--------------------------------------------------------------------------------
INS RELEASE 1.2
--------------------------------------------------------------------------------
check_mk -X erzwingen. Das -R soll nur noch klappen, wenn kein Configfehler
auftritt.

--------------------------------------------------------------------------------
BUGS
--------------------------------------------------------------------------------
Bei Inventur check_mk -I ntp werden auch die SNMP-Geraete abgefragt?
Werden die nur bei -I tcp ausgeklammert? Sollte nicht sein, sonst
bekommen wir viele Timeouts.

Multisite: Aenderung an default_user_role in multisite.mk erfordert
Apache-Neustart.

Sidebar scrollen: Wenn man ein Snapin packt, mit der Maus scrollt und
dabei die Maus über den Rand des HTML-Bereiches des Browsers rauszieht und
dort loslässt, dann bekommt die Sidebar das nicht mit. Wenn man mit der Maus
wieder reinfährt, ist man - trotz losgelassener Maus - noch im Scrollmodus.
Kann man den aktuellen Status der Maus irgendwie abfragen - so dass man das
verlorengegangene Event kompensieren kann? Oder kommt das Event irgendwo
anders an, wo man es noch abgreifen kann?

Counter wraps: Wenn ein Counter wrapped, liefert dann Check_MK eine Warnung
"got only 5 out of 9 infos?"

UTF-8 Patch im Livestatus:
--- ./mk-livestatus-1.1.4/src/Query.cc  2010-04-28 09:08:17.000000000
+0300
+++ ./mk-livestatus-1.1.4-utf-8/src/Query.cc    2010-06-02 13:46:36.077076220
+0300
@@ -888,6 +888,10 @@
        while (*r) {
        if (*r < 32 && *r >= 0) 
                outputUnicodeEscape((unsigned)*r);
+       /* updated by Alexander Yegorov*/
+       else if ((*r & 0xE0) == 0xC0)
+               outputUnicodeEscape(((*r & 31) << 6) | (*++r & 0x3F)); // 2
byte encoding
+       /* updated by Alexander Yegorov*/
        else if (*r < 0)
                outputUnicodeEscape((unsigned)((int)*r + 256)); // assume latin1
encoding
        else {

Stammt von hier:
http://www.nagios-portal.org/wbb/index.php?page=Thread&threadID=18763

Livestatus: Bei bestimmten regulären Ausdrücken in ~~ schmiert Nagios
ab. Ist wohl ein Bug in glibc/regcomp. Weiss nicht, was ich da machen
kann. Beispiel:
GET hosts 
Filter: name ~~ (.*){1,346}[bc] 


Livestatus: das Nagios-Debuglog ist nicht reentrant. Livestatus muss ein eigenes
Logfile schreiben. Wir machen das ohne Rotation. Man muss einfach selbst
aufpassen, dass es nicht zu groß wird. Default ist eh aus. Ins Nagios
geloggt wird nur das Starten und Beenden (was ja im Hauptthread läuft).


Wenn man gerade die Kommandobox auf hat (oder den Filter?) dann sollte
kein Refresh stattfinden. Sonst wird man mitten im Tippen abgewürgt.
Kann man das mit Javascript hinbekommen?

Eingabe von Downtimes: Auch hier Umlaute abfangen wie bei Comments

rrdcached-Startskript aus Skript: restart kill das Skript selbst.
Besser mit PID-Datei arbeiten. Ausserdem Optionen -s und -m verwenden.
Außerdem sollte der Cachedaemon auch verwendet werden.


--------------------------------------------------------------------------------
UNSCHOENHEITEN
--------------------------------------------------------------------------------
View-Tabellen von Multisite: bei Zeilen mit kritischem Status, sollten
zwei leicht unterschiedliche Rotoene verwendet werden. Aktuell ist einer
davon orange...

Logwatch.py: Wenn die state-Datei korrupt ist, diese neu anlegen und eine
Fakemeldung nach oben schicken, die critical ist.

Multisite: Zeitanzeige der Downtimes (ende) zu ungenau.  "in 6 hrs" ist
blöd. Auch bei Start "19 sec" ist dumm, hier wäre besser (vor 19 sec). Oder
bei Downtimes immer absolute Zeiten angeben? Evtl. Zusatzspalte der Duration.

snmp_communities: dictionary nicht mehr verwenden, aus Doku raus, Defaultwert
leere Liste, aus Code raus, Hinweis im ChangeLog. Evtl einen Test mit
Abbruch, wenn immer noch type ist dict.

bulkwalk_hosts: Hier ist der Default None und nicht []. Problem dabei
ist, dass dann ein += nicht funktioniert. Kann man nicht non_bulkwalk_hosts
ganz rausschmeissen und bulkwalk_hosts auf [] setzen? Ausserdem gibt
es ja fuer binaere Hostlisten das NEGATE (=> Doku). In 1.2 einbauen.

--------------------------------------------------------------------------------
IDEEN & VERBESSERUNGEN
--------------------------------------------------------------------------------
Neue Spalten: * long_service_output, host_notes

Multisite: Kann man - wenn man Aggregation verwendet - beim normalen
Host einen Links auf den Summary host machen und umgekehrt? Evtl.
hartkodiert in show_view(), falls die Variable host gesetzt ist?

Multisite: icons: das Erkennen der modified_attributes
funktioniert nur halb: Wenn man den Ausgangswert wiederherstellt,
bleibt das Attribut trotzdem modified...
Kann man die modified attributes beim Nagios so einstellen,
dass diese *nicht* bei einem Restart gespeichert werden?
Sonst werden sie nie zurückgesetzt. Oder kann man das evtl.
mit einem Kommando machen? 

    Ja => CHANGE_SVC_MODATTR;<host_name>;<service_description>;<value>
    Eine Datei local.mk, die von backup/restore *nicht* beruecksichtigt wird.

Multisite: Bei einer bestehenden View muss man die Datenquelle umstellen
können, zumindest wenn die neue Datenquelle alle Spalten unterstützt,
die aktuell verwendet werden (und Filter).  Man muss z.B. von hostgroups
auf hostgroups_merged umstellen können. Alles andere ist viel zu umständlich.

Cluster: Wenn der Clustername einer IP-Adresse zugeordnet ist (
einfach mit Check_MK-Mitteln Adresse ermitteln aus gethostbyname/ipaddresses),
dann:
 * IP in address eintragen anstelle von 0.0.0.0
 * check-mk-ping als Hostcheck verwenden

Edit view: die Spaltenzahl ist zu niedrig.

Inventur von Linux-NICs: Nur verwendete Karten monitoren.

Doku Windows:
 C:\> lodctr /s:c:\counter.txt
 ==> Holt aus der Registry die Namen und Beschreibungen der
 ganzen Performancecounter :-)

Die Option -d verwendet --cache nicht.

Filter für last_checked und last_state_change

Anstelle der Pipe direkt checkresults-Dateien schreiben

check_mk -R koennte statt restart ein reload machen.
Oder eine eigene option, check_mk -O?

check_mk -C soll Liste von Hosts bekommen können.

Generieren der Host- und Serviceconf umbauen und in einer gemeinsamen Schleifen
machen. Dabei stets zuerst die Services und dann die Hosts generieren.
Denn dann kann ich bei den Hosts schon wissen, ob es services gibt und für
die PING-only hosts eine andere Schablone nehmen, wo die check_interval
für Hostchecks auf 0 ist, also nur on-demand-pings ausgeführt werden
(damit man nicht doppelt pingt).

Multisite: man kann bei Comments keine Umlaute eingeben. Diese sind aktuell
verboten, weil Python sonst Exceptions wirft.  Komischerweise kann man
in den Filtern problemlos Umlaute eingeben. Keine Ahnung, wo hier der
Unterschied liegt.

Windows-Agent: Speicherberechung von Swap anpassen und Check mem entsprechend
anpassen, dass er TotalPage und UsedPage verwendet. Im Quellcode ist das schon
drin, der Check muss angepasst werden und auch die Schablone. Evtl. macht
man einen eigenen Check. Oder man löst es über das Check-Item.

Die impliziten Services Check_MK und PING und evtl. legacy_checks auch durch
die Konfigmaschine laufen lassen, damit Servicegruppen etc auch funktoinieren
(auch Inventory-Checks).  PING: service_notification_period und andere
Eigenschaften wie Gruppen, etc werden eicht berücksichtigt. Gleiches gilt
für Servicegruppen. Man sollte daher die Funktion extra_service_conf_of()
so erweitern, dass *alles* Nagios-Attribute agbefrühstückt werden.

check_mk --restore: Löscht er cache und counters? Er sollte nur die
Inhalte löschen. Es könnte nämlich sein, dass es sich nicht um Verzeichnisse,
sondern um Symlinks handelt.

check_mk --uninstall backup.tar.gz: Deinstalliert alle Dateien, die
setup installiert hat. Dazu verwendet man einfach die Pfade, die setup.sh
gespeichert hat (reicht das?). Man wird dabei gezwungen, vorher ein
Backup durchzuführen.

Livestatus-Limit-Header könnte auch einen Bereich erlauben, z.B.:
Limit: 1000 2000 (holt die zweiten Tausend Eintraege...)

Windows: Der Agent sollte die Logmeldungen nach UTF-8 konvertieren. 
Nur wie?

Logwatch: Hier sollte man wirklich einen Teil der Meldung ausgeben.
Kann man evtl. den long_service_output verwenden?

Performance counter: Generell sollten *alle* Counter von Check_MK
behandelt werden mit get_counter und *nicht* als counter in die
RRDs geschrieben, sondern bereits als Rate. Dadurch muss man alle
Graphen einmal wegwerfen. Das ist blöd. Vorteil allerdings: (1)
man kann Perf-O-Meter machen, (2) die Counter-Wrap-Erkennung
verhindert, dass in den RRDs nach einem Reboot utopische Werte
stehen (z.B. für die Kernel counter). (3) Da in den Performancedaten
bereits eine Rate steht, können auch Tools wie NagVis dafür eine
Visualisierung machen.

Multisite: Perf-O-Meter für weitere Checks einbauen.

Logfile ansicht: Filter zum suchen nach Texten.

View editor: Wenn man keine Display columns ausgewaehlt
hat, dann sollte eine Fehlermeldung kommen.

Windows services: Konfiguration von Namen für die Services
über 
  windows_service_aliasses = {
     'ACDSee Lizenzserver' : 'ProductCommunicationService',
  }
Der Schlüssel ist dabei der logische Name. Oder man macht es
umgekert. Verfahren: Als item wird der logische Alias-name
speichert. So taucht dieser dann in der Service-Description
auf. Beim Check kommt der logische Name rein. Mit dem dict
kann ich daraus den physischen berechnen und so die richtige
Zeile finden. Oder ich kann umgekehrt jede Zeile im dict
zum Physischen namen den Alias nachschlagen und so zu Zuordnung
machen.

Livestatus: Bei den Tabellen hosts und services fehlt die
Spalte 'contact_groups'. Man bekommt zwar die Einzelkontakte,
aber nicht die Gruppen. Bei den Nagios-Datenstrukturen gibt
es aber einen passenden Zeiger dafür. Sollte also nicht schwer
sein, das umzusetzen.

Livestatus: Beim Empfangen von Queries gibt es zwei Timeouts:
den für eine Zeile, den für eine Queriy. Beide sollte man 
konfigurieren können und auch evtl. im Default etwas erhöhen.

