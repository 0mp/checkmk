#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

# This Check_MK-Agent plugin gathers information about mailinglists hosted
# by the local mailman instance.

# Needed if you have located your mailman python modules not in default
# python module paths
import sys
sys.path.append("/usr/local/mailman")

# Set to True to filter out all "hidden" mailinglists
only_advertised = True

from Mailman import Utils, MailList

# 1. list memberships
print '<<<mailman_lists>>>'
total_members = set([])
for name in sorted(Utils.list_names()):
    mlist = MailList.MailList(name, lock=0)
    if only_advertised and not mlist.advertised:
        continue

    rmembers = mlist.getRegularMemberKeys()
    dmembers = mlist.getDigestMemberKeys()
    members = rmembers + dmembers
    total_members.update(members)

    print '%s %d' % (name, len(members))
print 'TOTAL %d' % len(total_members)
