#!/bin/bash
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de


# Run and *send* only once every 4 hours
INTERVAL=14400

FLAGFILE=$MK_VARDIR/mk_inventory.last.$REMOTE
NOW=$(truss /usr/bin/date 2>&1 | grep ^time | awk -F"= " '{print $2}')
UNTIL=$((NOW + INTERVAL + 600))

#check if flagfile exits
if [ -e "$FLAGFILE" ]; then
    LAST_RUN=$(cat $FLAGFILE)
else
    #First run of the script
    LAST_RUN=0
fi

if [ $(( NOW - LAST_RUN )) -ge $INTERVAL ]
then
    echo $NOW > $FLAGFILE

    echo "<<<solaris_uname:sep(61):persist($UNTIL)>>>"
    uname -X

    if type prtdiag > /dev/null; then
        echo "<<<solaris_prtdiag:sep(10):persist($UNTIL)>>>"
        serial=`sneep -t serial`;echo "SerialNumber: $serial"
        prtdiag -v
    fi

    if type psrinfo > /dev/null; then
        echo "<<<solaris_psrinfo:persist($UNTIL)>>>"
        psrinfo -p -v
    fi

    if type prtpicl > /dev/null; then
        echo "<<<solaris_prtpicl:persist($UNTIL)>>>"
        prtpicl -v
    fi


    if type pkginfo >/dev/null ; then
        echo "<<<solaris_pkginfo:sep(58):persist($UNTIL)>>>"
        pkginfo -l
    fi
fi

