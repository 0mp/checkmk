INSTALLATION VON CHECK_MK
----------------------------------------------------------------------
Es gibt drei Arten, wie Sie check_mk erhalten können:
 - als RPM-Paket (.rpm)
 - als Debian-Paket (.deb)
 - als gezipptes Tar-Archive (.tar.gz)

Alle drei Varianten sind architektur-unabhängig und können
auf allen aktuellen Linux-Derivaten installiert werden, sofern
die vorausgesetzte Software installiert ist.

Die Installation mit RPM bietet sich auf RPM-basierten
Systemen an (z.B. SUSE, Red Hat, FEDORA, CentOS). Die Installation
erfolgt immer als root-Benutzer mit folgendem Befehle

# rpm -i check_mk-1.0.14-1.noarch.rpm

Die Installation des Debian-Paketes (z.B. auf Debian, UBUNTU)
erfolgt analog mit dpkg -i:

# dpkg -i check-mk_1.0.14-2_all.deb

Die Installation mit RPM und DEB erfolgt grundsätzlich
in folgende Pfade:

/usr/share/snmp/mibs       - MIB-Dateien für SNMP
/usr/share/check_mk        - Plugins, Module, Agenten
/usr/share/doc/check_mk    - Dokumentation
/usr/bin                   - ausführbare Programme
/etc/check_mk              - Konfigurationsdateien
/var/lib/check_mk          - variable zur Laufzeit erzeugte Daten

Die Verwendung des Tar-Archivs bietet sich dagegen
auch die Möglichkeit, die Pfade frei zu definieren. Damit
ist auch auch eine Installation als nicht-root-Benutzer 
möglich. Zur Installation entpacken Sie zunächst das Archiv
in ein Hilfsverzeichnis, am besten unter /tmp.

# tar xzf check_mk-1.0.14.tar.gz

Dadurch ensteht das Verzeichnis check_mk-1.0.14, in welchem
Sie ein Shellskript mit dem Namen setup.sh finden. Dieses
Skript führen Sie aus mit ./setup.sh und werden nach den
gewünschten Installationspfaden gefragt.

! Führen Sie das Skript als root aus, so werden Ihnen
  als Standardpfade die gleichen wie bei der Installation
  mit RPM/DEB vorgeschlagen. Durch Enter bestätigen Sie
  die Standardvorgaben

! Führen Sie das Skript als nicht-root-Benutzer aus, so
  sind befinden sich die vorgeschlagenen Standardpfade
  im Verzeichnis ~/check_mk (also unter Ihrem Homeverzeichnis)

Nach einer Bestätigung mit 'j' werden alle Dateien installiert.
Dabei werden fehlende Verzeichnisse grundsätzlich automatisch
angelegt. Dateien von einer früheren Installation werden automatisch
überschrieben. Von der zentralen Konfigurationsdatei main.mk
wird zuvor im gleichen Verzeichnis eine Sicherheitskopie angelegt.
Dateien Ihres Systems, die sich außerhalb der Installationspfade
befinden, werden nicht geändert oder ersetzt.

Wichtig: Während der Installation werden die von Ihnen gewählten
Verzeichnisse als Standardeinstellungen in check_mk fest integriert.
Diese können jedoch bei Bedarf in der Konfigurationsdatei main.mk
später geändert werden. Was *nicht* geändert werden kann, ist der
Pfad zur Konfigurationsdatei main.mk selbst. Dieser kann jedoch
mit der Aufrufoption -c festgelegt werden. Außerdem wird main.mk
auch im aktuellen Verzeichnis und im Verzeichnis $HOME/check_mk gesucht.

TEST

Nach der Installation sollten Sie in der Lage zu sein, das Programm
'check_mk' aufzurufen. Bei einer Installation als root mit den
Standardpfaden wird check_mk in /usr/bin installiert und befindet sich
damit im Suchpfad. Andernfalls müssen Sie beim Aufruf den Pfad
zu check_mk mit angeben. Bei einer Installation als nicht-root
mit den Standardpfaden rufen Sie das Programm mit ~/check_mk/bin/check_mk
auf.

Rufen Sie check_mk der Option -L auf, so erhalten Sie eine Liste
aller installierten check-Plugins:

# check_mk -L
Available check types:

                    plugin   performance  inventory
Name                type     data         possible    service description
-------------------------------------------------------------------------
blade_bays          snmp     no           yes         BAY %s
blade_misc          snmp     yes          yes         SENSOR %s
blade_powerfan      snmp     yes          yes         Power Module Cooling Device %s
blade_powermod      snmp     no           yes         Power Module %s
bluecoat_diskcpu    snmp     yes          yes         %s
bluecoat_sensors    snmp     yes          yes         %s
cisco_fan           snmp     no           yes         %s
cisco_locif         snmp     yes          yes         Port %s
cisco_power         snmp     no           yes         %s
cisco_temp          snmp     yes          yes         %s
u.s.w...


