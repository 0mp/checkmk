Konzept zur Funktion "Umbenennen von Hosts"
-------------------------------------------

Im WATO in den Details eines Hosts bauen wir einen neuen Knopf ein "Rename Host".
Dieser Knopf führt zu einer eigenen Seite. Das ganze muss auch für Cluster gehen.
Diese Seite enthält:

- Ein Formular, in dem man den neuen Hostnamen eingeben kann.
- Eine Aufstellung, wo überall der Name geändert werden wird.

WATO:
  * Hostverwaltung: Name des Hosts im Folder
  * Cluster: wenn der Host Node eines Clusters ist
  * Regeln: in allen Regeln explizite Nennungen ersetzen (keine Regexen)
  * Notifications: explizite Nennungen in Notification-Regeln (RBN)
  * Flexible Notifications: auch hier (also in den Benutzerprofilen)
  ==> Das alles geschieht lokal direkt im zentralen WATO

Multisite:
  * Favoriten der Benutzer


Check_MK:
  * Verzeichnisse und Dateien unter var:
     * piggyback
     * autochecks (auch *in* der Datei!)
     * logwatch
     * snmpwalks
  * Verzeichnisse unter tmp:
     * cache
     * counters

  ==> Das alles muss mit einer Automation gehen

Core:
  - Downtimes und Acknowledgements.
    Nagios -> retention.dat
    CMC -> Fuck, wie soll ich *das* machen???

OMD:
  * PNP4Nagios - Performancedaten. Was ist mit den Spooldateien?
  * rrdcached - Journaldateien (dazu muss das Ding aber gestoppt sein)
  * Historie von Nagios und CMC
    -> Hier ist das Problem, dass die dummen Logfileeinträge nicht immer
       gleich aussehen. Wenn man nur nach ;...; geht, kann man evtl.
       auch Services erwischen von Hosts, die zufällig so heißen (oder
       absichtlich).
  * NagVis - Nennungen der Hosts in Maps
  - nagios - Historie und retention.dat (dazu muss der Core stoppt sein)
    Das Umbenennen in retention.dat geht beim CMC aber eh nicht. Daher
    lassen wir es bei Nagios evtl. auch weg. Man kann ja gleich nach dem
    Umbenennen ein reschedule machen?

  ==> Auch das muss mit einer Automation gehen

ES FEHLT:

* retentions.dat (analog bei CMC)
* Stop/Start vom Core inkl. Config erzeugen zu rechter Zeit
* Nachdenken, ob noch was fehlt.


Beim Stoppen/Starten des Cores muss ich sicherstellen:

1. Das ganze Umbenennen sollte nur dann antriggerbar sein, wenn bei der
entsprechenden Site keine Pending Changes da sind. Ansonsten Hinweis.

2. Damit ein Fehler beim Konfig erzeugen ausgeschlossen werden kann, muss
ich sicherstellen, dass die IP-Adresse des neuen Namens (ebenfalls)
auflösbar ist - und zwar von der Monitoring-Site. Man könnte das zur
Not so machen, dass - im Falle eines Scheiterns der Auflösung - die bisherige
IP-Adresse verwendet wird. Das müsste aber ja dann bei der Konfigerzeugung
passieren. Oder wir schieben eine Automation vor, welche das prüft. Oder
wir packen das in den DNS-Cache rein. Einfach die alte Adresse ermitteln
und im DNS-Cache unter dem neuen Namen speichern.

3. Wenn das Konfig-Erzeugen trotzdem nicht klappt, wird einfach die alte Konfig
weiterverwendet und die automation scheitern *am Schluss* mit einem Fehler.

4. Vorgehen:
 - IP-Adresse des alten Namen in den DNS-Cache eintragen
 - Feststellen, ob der Core läuft. Wenn ja stoppen und sich das merken
 - Dann alles machen
 - Jetzt die Konfig erzeugen und prüfen. Wenn ein Fehler auftritt, zurückrollen
 - Und den Core wieder starten (beides mit automation_restart)

