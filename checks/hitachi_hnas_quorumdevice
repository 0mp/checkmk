#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def inventory_hitachi_hnas_quorumdevice(info):
    return [(None, None)]

def check_hitachi_hnas_quorumdevice(item, _no_params, info):
    status=int(info[0][0])
    statusmap = ("unknown", "unconfigured", "offLine", "owned", "configured",
            "granted", "clusterNodeNotUp", "misconfigured")
    if status >= len(statusmap):
        return 3, "Quorum Device reports unidentified status %s" % status
    else:
        if status == 4:
            rc = 0
        else:
            rc = 1
        return rc, "Quorum Device reports status %s" % statusmap[status]

check_info["hitachi_hnas_quorumdevice"] = {
    "check_function"        : check_hitachi_hnas_quorumdevice,
    "inventory_function"    : inventory_hitachi_hnas_quorumdevice,
    "service_description"   : "Quorum Device",
    "has_perfdata"          : False,
    "snmp_info"             : (".1.3.6.1.4.1.11096.6.1.1.1.2.5", [7]), # clusterQuorumDeviceStatus
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.11096.6"),
}

