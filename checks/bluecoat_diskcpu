#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |                     _           _           _                    |
# |                  __| |_  ___ __| |__  _ __ | |__                 |
# |                 / _| ' \/ -_) _| / / | '  \| / /                 |
# |                 \__|_||_\___\__|_\_\_|_|_|_|_\_\                 |
# |                                   |___|                          |
# |              _   _   __  _         _        _ ____               |
# |             / | / | /  \| |__  ___| |_ __ _/ |__  |              |
# |             | |_| || () | '_ \/ -_)  _/ _` | | / /               |
# |             |_(_)_(_)__/|_.__/\___|\__\__,_|_|/_/                |
# |                                            check_mk 1.1.0beta17  |
# |                                                                  |
# | Copyright Mathias Kettner 2009             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
# 
# This file is part of check_mk 1.1.0beta17.
# The official homepage is at http://mathias-kettner.de/check_mk.
# 
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.



def inventory_bluecoat_diskcpu(checkname, info):
    return [ (line[0], "current value: " + line[1], '""') for line in info ]

def check_bluecoat_diskcpu(item, params, info):
    for line in info:
        if line[0] == item:
           perfdata = [("value", line[1]) ]
           if line[2] == '1':
              return (0, "OK - %s" % (line[1],), perfdata)
           else:
              return (2, "CRIT - %s" % (line[1], ), perfdata)
    return (3, "UNKNOWN - item not found in SNMP data")

check_info['bluecoat_diskcpu'] =  (
	check_bluecoat_diskcpu,
        "%s",
        1,
        inventory_bluecoat_diskcpu)

snmp_info['bluecoat_diskcpu'] =  (
    "enterprises.3417.2.4.1.1.1",
    [ 3, 4, 6 ]), # BLUECOAT disk und CPU-Tabelle
