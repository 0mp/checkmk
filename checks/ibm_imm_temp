#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def inventory_ibm_imm_temp(info):
    for line in info:
        yield line[0], {}

def check_ibm_imm_temp(item, params, info):
    for line in info:
        if line[0] == item:
            temp, dev_crit, dev_warn, dev_crit_lower, dev_warn_lower = map(float,line[1:])
            dev_levels = dev_warn, dev_crit
            dev_levels_lower = dev_warn_lower, dev_crit_lower
            return check_temperature(temp, params, \
                        dev_levels = dev_levels, dev_levels_lower = dev_levels_lower)

check_info["ibm_imm_temp"] = {
    'check_function'          : check_ibm_imm_temp,
    'inventory_function'      : inventory_ibm_imm_temp,
    'service_description'     : 'Temperature %s',
    'includes'                : [ 'temperature.include' ],
    'has_perdata'             : True,
    'group'                   : 'temperature',
    'snmp_scan_function'      :
            lambda oid: oid('.1.3.6.1.2.1.1.1.0').lower().endswith(" mips") or \
                        oid('.1.3.6.1.2.1.1.1.0').lower().endswith(" sh4a"),
    'snmp_info'               : ('.1.3.6.1.4.1.2.3.51.3.1.1.2.1', [ # tempTable.tempEntry
                                        #1, # tempIndex
                                        2, # tempDescr
                                        3, # tempReading
                                        #4, # tempNominalReading
                                        #5, # tempNonRecovLimitHigh
                                        6, # tempCritLimitHigh
                                        7, # tempNonCritLimitHigh
                                        #8, # tempNonRecovLimitLow
                                        9, # tempCritLimitLow
                                        10, # tempNonCritLimitLow
                                ]),
}
