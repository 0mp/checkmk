#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2012             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# snmp_scan_function
# .1.3.6.1.2.1.1.1.0 = "AirLaser IP1000"  < matches airlaser
# .1.3.6.1.4.1.2800.2.1.1.0 3             < Version of management agent ( exists )
# snmp_info
# .1.3.6.1.4.1.2800.2.1.3                 < AirLaser Status



def inventory_cbl_airlaser(info):
    # Inventorize if the scan function fired
    return [ (None, None) ]

def check_cbl_airlaser_status(item, _no_params, info):
    status = info[0][0]

    if status == "1":
        return (0, "OK - Airlaser: normal operation")
    elif status == "2":
        return (1, "WARN - Airlaser: testing mode")
    elif status == "3":
        return (1, "WARN - Airlaser: warning condition")
    elif status == "4":
        return (2, "CRIT - Airlaser: a component has failed self-tests")

    return (3, "UNKNOWN - Unknown data from agent")


check_info["cbl_airlaser.status"]  = {
    "check_function"       : check_cbl_airlaser_status,
    "inventory_function"   : inventory_cbl_airlaser,
    "service_description"  : "CBL Airlaser Status",
    "has_perfdata"         : False,
    "snmp_scan_function"   : lambda oid: "airlaser" in oid(".1.3.6.1.2.1.1.1.0").lower() \
                             and oid(".1.3.6.1.4.1.2800.2.1.1.0"),
    "snmp_info"            : (".1.3.6.1.4.1.2800.2.1",  [
                               "3",     # AirLaser Status
                               ]),
}
