#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def inventory_raritan_pdu_outletcount(info):
    if len(info) > 0 and len(info[0]) > 0:
        return [ (None, None) ]
    else:
        return []

def check_raritan_pdu_outletcount(item, params, info):
    outletcount = int(info[0][0])
    status = 0
    if params:
        crit_low, warn_low, warn_high, crit_high = params
        perfdata = [ ("outletcount", outletcount, "%d:%d" % (warn_low, warn_high), "%d:%d" % (crit_low, crit_high), 0) ]
        if outletcount <= warn_low or outletcount >= warn_high:
            status = 1
        if outletcount <= crit_low or outletcount >= crit_high:
            status = 2
    else:
        perfdata = [ ("outletcount", outletcount, None, None, 0) ]

    message  = "Outlet Count is %s" % outletcount
    return status, message, perfdata

check_info['raritan_pdu_outletcount'] = {
  "inventory_function"  : inventory_raritan_pdu_outletcount,
  "check_function"      : check_raritan_pdu_outletcount,
  "service_description" : "Outlet Count",
  "group"               : "plug_count",
  "has_perfdata"        : True,
  "snmp_info"           : (".1.3.6.1.4.1.13742.6.3.2.2.1.4", ["1"]),  # outletCount
  "snmp_scan_function"  : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.13742.6") and \
                                      oid(".1.3.6.1.4.1.13742.6.3.2.1.1.3.1").startswith("PX2-2")
}
