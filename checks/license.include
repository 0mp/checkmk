#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de


def license_check_levels(have, used, params):
    if params == None:
        warn = have
        crit = have
    elif params == False:
        warn = None
        crit = None
    elif type(params[0]) == int:
        warn = max(0, have - params[0])
        crit = max(0, have - params[1])
    else:
        warn = have * (1 - params[0]/100)
        crit = have * (1 - params[1]/100)

    perfdata = [ ( "licenses", used, warn, crit, 0, have )]
    if used <= have:
        infotext = "used %d out of %d licenses" % (used, have)
    else:
        infotext = "used %d licenses, but you have only %d" % (used, have)

    if crit != None and used > crit:
        status = 2
    elif warn != None and used > warn:
        status = 1
    else:
        status = 0

    if status:
        infotext += " (warn/crit at %d/%d)" % (warn, crit)

    return status, infotext, perfdata
