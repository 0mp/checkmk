#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2010             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
# 
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
# 
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_blade_health(checkname, info):
    if len(info) == 1:
	return [(None, None, None)]

def check_blade_health(_no_item, _no_params, info):
    state = info[0][0]
    if state == "255":
        return (0, "OK - State is good")
    elif state == "2":
	return (2, "CRIT - State is degraded (non critical)")
    elif state == "4":
        return (1, "WARN - State is degraded (system level)")
    elif state == "0":
        return (0, "CRIT - State is critical!")
    else:
        return (3, "UNKNOWN - Undefined state code %s" % state)


check_info['blade_health'] = ( check_blade_health, "Summary health state", 0, inventory_blade_health)

snmp_info['blade_health'] = ( "enterprises.2.3.51.2.2.7", [1])
