#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# docsIfSignalQualityEntry        1.3.6.1.2.1.10.127.1.1.4.1
# docsIfSigQIncludesContention    1.3.6.1.2.1.10.127.1.1.4.1.1
# docsIfSigQUnerroreds            1.3.6.1.2.1.10.127.1.1.4.1.2
# docsIfSigQCorrecteds            1.3.6.1.2.1.10.127.1.1.4.1.3
# docsIfSigQUncorrectables        1.3.6.1.2.1.10.127.1.1.4.1.4
# docsIfSigQSignalNoise           1.3.6.1.2.1.10.127.1.1.4.1.5
# docsIfSigQMicroreflections      1.3.6.1.2.1.10.127.1.1.4.1.6
# docsIfSigQEqualizationData      1.3.6.1.2.1.10.127.1.1.4.1.7
#
factory_settings["docsis_signal_quality_default_levels"] = {
        "corrected"     : ( 25.0 , 30.0 ),
        "uncorrected"   : ( 25.0 , 30.0 ),
        "signal_noise"  : ( 50.0, 60.0 ), # dB
}

def inventory_docsis_signal_quality(info):
    for line in info:
        if line[1] != '0':
            yield line[0], {}

def check_docsis_signal_quality( item, params, info):
    for entry, good, corrected, uncorrected, signal_noise in info:
        if entry == item:
            # Signal Noise
            noise_db = float(signal_noise) / 10
            infotext = "Signal/Noise-rate: %.2f dB" % noise_db
            warn, crit = params['signal_noise']
            levels = " (warn/crit at %.1f/%.1f dB)" % ( warn, crit )
            state = 0
            if noise_db >= crit:
                state = 2
                infotext += levels
            elif noise_db >= warn:
                state = 2
                infotext += levels
            yield state, infotext, [ ('signal_noise', noise_db, warn, crit ) ]

            # FEC
            fec = {}
            good, fec['corrected'], fec['uncorrected'] = map(float, [ good, corrected, uncorrected ])
            fec['corrected_perc']   = ( fec['corrected'] / good ) * 100
            fec['uncorrected_perc'] = ( fec['uncorrected'] / good ) * 100

            for what in [ 'corrected', 'uncorrected' ]:
                warn, crit = params[what]
                state = 0
                if fec[what+"_perc"] >= crit:
                    state = 2
                elif fec[what+"_perc"] >= warn:
                    state = 1
                yield state, "FEC %s at %.2f%%" % ( what, fec[what+"_perc"] ), [ ( what, fec[what], warn, crit ) ]
            yield 0, "Total: %d codewords" % good, [('total', good )]
            return
    yield 3, "Quality Entry not found in SNMP Output"

check_info["docsis_signal_quality"] = {
    "check_function"          : check_docsis_signal_quality,
    "inventory_function"      : inventory_docsis_signal_quality,
    "service_description"     : "Signal Quality Channel %s",
    "snmp_scan_function"      : docsis_scan_function,
    "has_perfdata"            : True,
    "snmp_info"               : ( ".1.3.6.1.2.1.10.127.1.1.4.1", [
                                                                    OID_END,
                                                                    2, # docsIfSigQUnerroreds
                                                                    3, # docsIfSigQCorrecteds
                                                                    4, # docsIfSigQUnerroreds
                                                                    5, # docsIfSigQSignalNoise
                                                                ]),
    "default_levels_variable" : "docsis_signal_quality_default_levels",
    "group"                   : "docsis_signal_quality",
    "includes"                : [ "docsis.include" ],
}

