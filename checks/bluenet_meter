#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de


def parse_bluenet_meter(info):
    parsed = {}
    for meter_id, power_p, power_s, u_rms, i_rms in info:
        # do not take into account powermeters with no voltage
        if u_rms != "0":
            parsed.setdefault(meter_id, {})
            parsed[meter_id]["voltage"] = float(u_rms) / 1000.0, None
            parsed[meter_id]["current"] = float(i_rms) / 1000.0, None
            parsed[meter_id]["power"] = float(power_p), None
            parsed[meter_id]["appower"] = float(power_s), None
    return parsed


check_info["bluenet_meter"] = {
    "parse_function"          : parse_bluenet_meter,
    "inventory_function"      : inventory_elphase,
    "check_function"          : check_elphase,
    "service_description"     : "Powermeter %s",
    "group"                   : "ups_outphase",
    "has_perfdata"            : True,
    "snmp_info"               : (".1.3.6.1.4.1.21695.1.10.7.2.1", [
                                        1, # e3lpmMeter
                                        5, # e3lpmPowerP
                                        7, # e3lpmPowerS
                                        8, # e3lpmUrms
                                        9, # e3lpmIrms
                               ]),
    "snmp_scan_function"      : lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.21695.1",
    "includes"                : ["elphase.include"],
}
