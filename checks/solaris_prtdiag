#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Example output from agent:
# .
# .
# .
# SPARC64-VII mode
#
# PRTDIAG_OVERALL_STATE : 0
# SerialNumber: BDF112567


def inventory_solaris_prtdiag(info):
    for line in info:
        # We have to search in the agent section if we find
        # that state
        if line[0].startswith("PRTDIAG_OVERALL_STATE"):
            return [(None, None)]

def check_solaris_prtdiag(_no_item, _no_params, info):
    for line in info:
        if line[0].startswith("PRTDIAG_OVERALL_STATE"):
            # 0 No failures or errors are detected in the system.
            # 1 Failures or errors are detected in the system.
            state = int(info[-1][0].split(':')[1])

    # If we not find the status in the agent output, raise error
    if state == 0:
        return 0, "No failures or errors are detected in the system"
    else:
        return 2, "Failures or errors are detected in the system, please check details via prtdiag -v"

check_info['solaris_prtdiag'] = {
    "inventory_function"      : inventory_solaris_prtdiag,
    "check_function"          : check_solaris_prtdiag,
    "service_description"     : "Hardware Overall State"
}



