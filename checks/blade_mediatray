#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def inventory_blade_mediatray(info):
    if len(info) == 1 and info[0][0] == "1":
        return [(None, None, None)]

def check_blade_mediatray(_no_item, _no_params, info):
    if len(info) < 1:
        return (3, "no information about media tray in SNMP output")
    present = info[0][0]
    communicating = info[0][1]
    if present != "1":
        return (2, "media tray not present")
    elif communicating != "1":
        return (2, "media tray not communicating")
    else:
        return (0, "media tray present and communicating")


check_info["blade_mediatray"] = {
    'check_function':          check_blade_mediatray,
    'inventory_function':      inventory_blade_mediatray,
    'service_description':     'Media tray',
    'snmp_info':               ('.1.3.6.1.4.1.2.3.51.2.2.5.2', [74, 75]),
    'snmp_scan_function':      \
     lambda oid: re.match('(BladeCenter|BladeCenter Advanced|IBM Flex Chassis) Management Module', oid(".1.3.6.1.2.1.1.1.0")) != None,
}
