#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

cisco_fan_states = ('', 'normal', 'warning', 'critical',
                        'shutdown', 'notPresent', 'notFunctioning')

def inventory_cisco_fan(info):
    return [ (cisco_sensor_item(line[0],line[-1]), None) for line in info if line[1] != '5' ]

def check_cisco_fan(item, params, info):
    for statustext, state, oid_end in info:
        if cisco_sensor_item(statustext, oid_end) == item:
            state = int(state)
            if state == 1:
                return (0, "State is: %s (%d)" % (cisco_fan_states[state], state))
            elif state == 2:
                return (1, "State is %s (%d)" % (cisco_fan_states[state], state))
            else:
                return (2, "State is %s (%d)" % (cisco_fan_states[state], state))
    return (3, "item not found in snmp data")


check_info["cisco_fan"] = {
    'check_function':          check_cisco_fan,
    'inventory_function':      inventory_cisco_fan,
    'service_description':     'FAN %s',
    'snmp_info':               ('.1.3.6.1.4.1.9.9.13.1.4.1', ['2', '3', OID_END]),
    'snmp_scan_function':      \
     lambda oid: "cisco" in oid(".1.3.6.1.2.1.1.1.0").lower(),
    "includes"              : ['cisco_sensor_item.include'],
}
