#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def inventory_decru_temps(info):
    return [ (l[0], (int(fahrenheit_to_celsius(int(l[1]))) + 4.0,
    int(fahrenheit_to_celsius(int(l[1]))) + 8.0 ) ) for l in info ]

def check_decru_temps(item, params, info):
    for name, rawtemp in info:
        if name == item:
            temp = fahrenheit_to_celsius(int(rawtemp))
            return check_temperature(temp, params)


check_info["decru_temps"] = {
    'check_function':          check_decru_temps,
    'inventory_function':      inventory_decru_temps,
    'service_description':     'Temperature %s',
    'has_perfdata':            True,
    'snmp_info':               ('.1.3.6.1.4.1.12962.1.2.4.1', [2, 3]),
    'snmp_scan_function':      \
     lambda oid: "datafort" in oid('.1.3.6.1.2.1.1.1.0').lower(),
    'group':                   'hw_temperature',
    'includes':                [ 'temperature.include' ],
}
