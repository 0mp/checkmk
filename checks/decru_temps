#!/usr/bin/python

def to_celsius(f):
    return int(round(float(f) - 32.0 ) * 5.0 / 9.0)

def inventory_decru_temps(checkname, info):
    return [ (l[0], l[1] + " Fahrenheit", (to_celsius(int(l[1])) + 4.0, to_celsius(int(l[1])) + 8.0 ) ) for l in info ]

def check_decru_temps(item, params, info):
    for temp in info:
       if temp[0] == item:
          temp = to_celsius(int(temp[1]))
	  warn, crit = params
	  perfdata = [("temp", temp, "", "", warn, crit)]
	  infotxt = " - %d C (levels at %d/%d)" % (temp, warn, crit)
          if temp >= crit: 
	     return (2, "CRIT" + infotxt, perfdata)
          elif temp >= warn:
	     return (1, "WARN" + infotxt, perfdata)
          else:
	     return (0, "OK" + infotxt, perfdata)

    return (3, "UNKNOWN - sensor not found")

check_info['decru_temps'] = (check_decru_temps, "TEMP %s", 1, inventory_decru_temps)

snmp_info['decru_temps'] = ( "enterprises.12962.1.2.4.1", [ 2, 3 ] )
# snmp_scan_info['decru_temps'] = ( "enterprises.12962.1.1.1.1", "=", "san" )
# oder (SNMPv2-MIB::sysObjectID.0 = OID: SNMPv2-SMI::enterprises.12962.2.1.4):
# snmp_scan_info['decru_temps'] = ( ".1.3.6.1.2.1.1.2.0", "=", ".1.3.6.1.4.1.12962.2.1.4" )

