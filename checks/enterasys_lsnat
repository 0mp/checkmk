#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def inventory_enterasys_lsnat(info):
    return [ (None, {}) ]

def check_enterasys_lsnat(no_item, params, info):
    if not info:
        return 3, "LSNAT bindings info is missing"

    lsnat_bindings = saveint(info[0][0])
    warn, crit = params.get("current_bindings", (None, None))

    state = 0
    state_info = ""
    if warn:
        if lsnat_bindings > crit:
            state = 2
            state_info = state_markers[state]
        elif lsnat_bindings > warn:
            state = 1
            state_info = state_markers[state]

    perfdata = [ ("current_bindings", lsnat_bindings, warn, crit) ]

    return state, "Current bindings %d%s" % (lsnat_bindings, state_info), perfdata


check_info["enterasys_lsnat"] = {
    "check_function"        : check_enterasys_lsnat,
    "inventory_function"    : inventory_enterasys_lsnat,
    "service_description"   : "LSNAT Bindings",
    "group"                 : "lsnat",
    "has_perfdata"          : True,
    "snmp_info"             : ( ".1.3.6.1.4.1.5624.1.2.74.1.1.5", [ "0" ] ),
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.5624.2.1") and
                                          oid(".1.3.6.1.4.1.5624.1.2.74.1.1.5.0"),
}

