#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def detect_webtherm(oid):
    return oid(".1.3.6.1.2.1.1.2.0") in \
       [  ".1.3.6.1.4.1.5040.1.2.1",
          ".1.3.6.1.4.1.5040.1.2.2",
          ".1.3.6.1.4.1.5040.1.2.3",
          ".1.3.6.1.4.1.5040.1.2.6",
          ".1.3.6.1.4.1.5040.1.2.7",
          ".1.3.6.1.4.1.5040.1.2.8",
          ".1.3.6.1.4.1.5040.1.2.9",
          ".1.3.6.1.4.1.5040.1.2.16",
          ".1.3.6.1.4.1.5040.1.2.18" ]

#   .--Air Pressure--------------------------------------------------------.
#   |          _    _        ____                                          |
#   |         / \  (_)_ __  |  _ \ _ __ ___  ___ ___ _   _ _ __ ___        |
#   |        / _ \ | | '__| | |_) | '__/ _ \/ __/ __| | | | '__/ _ \       |
#   |       / ___ \| | |    |  __/| | |  __/\__ \__ \ |_| | | |  __/       |
#   |      /_/   \_\_|_|    |_|   |_|  \___||___/___/\__,_|_|  \___|       |
#   |                                                                      |
#   '----------------------------------------------------------------------'

def inventory_wut_webtherm_pressure(info):
    for index, reading in info:
        if index.split(".")[1] == "3":
            return [ ("3", None) ]


def check_wut_webtherm_pressure(item, _no_params, info):
    for index, reading in info:
        if index.split(".")[1] == item:
            pressure = float(reading.replace(",",".")) # This value is in hPa
    return 0, "%.2f hPa" % pressure


check_info["wut_webtherm.pressure"] = {
    "inventory_function"        : inventory_wut_webtherm_pressure,
    "check_function"            : check_wut_webtherm_pressure,
    "service_description"       : "Pressure %s",
}

#.
#   .--Humidity------------------------------------------------------------.
#   |              _   _                 _     _ _ _                       |
#   |             | | | |_   _ _ __ ___ (_) __| (_) |_ _   _               |
#   |             | |_| | | | | '_ ` _ \| |/ _` | | __| | | |              |
#   |             |  _  | |_| | | | | | | | (_| | | |_| |_| |              |
#   |             |_| |_|\__,_|_| |_| |_|_|\__,_|_|\__|\__, |              |
#   |                                                  |___/               |
#   '----------------------------------------------------------------------'

wut_webtherm_humidity_defaultlevels = (35, 40, 60, 65)

def inventory_wut_webtherm_humidity(info):
    for index, reading in info:
        if index.split(".")[1] == "2":
            return [ ("2", "wut_webtherm_humidity_defaultlevels") ]


def check_wut_webtherm_humidity(item, params, info):
    for index, reading in info:
        if index.split(".")[1] == item:
            humidity = float(reading.replace(",","."))
    return check_humidity(humidity, params)


check_info["wut_webtherm.humidity"] = {
    "inventory_function"        : inventory_wut_webtherm_humidity,
    "check_function"            : check_wut_webtherm_humidity,
    "service_description"       : "Humidity %s",
    "includes"                  : [ "humidity.include" ],
    "group"                     : "humidity",
}

#.
#   .--Temperature---------------------------------------------------------.
#   |     _____                                   _                        |
#   |    |_   _|__ _ __ ___  _ __   ___ _ __ __ _| |_ _   _ _ __ ___       |
#   |      | |/ _ \ '_ ` _ \| '_ \ / _ \ '__/ _` | __| | | | '__/ _ \      |
#   |      | |  __/ | | | | | |_) |  __/ | | (_| | |_| |_| | | |  __/      |
#   |      |_|\___|_| |_| |_| .__/ \___|_|  \__,_|\__|\__,_|_|  \___|      |
#   |                       |_|                                            |
#   '----------------------------------------------------------------------'

factory_settings["wut_webtherm_defaultlevels"] = {
    "levels"    : (30, 35),
}

def inventory_wut_webtherm(info):
    # line[0] is 1.1, 2.1, 3.1, 6.1, 8.1, 16.1 or 18.1 depending on MIB variant. We chop
    # of the first part in order to get independent of that.
    for index, reading in info:
        if index.split(".")[1] == "1":
            return [ ("1", {}) ]

def check_wut_webtherm(item, params, info):
    for line in info:
        if line[0].split(".")[1] == item:
            temp = float(line[1].replace(",", "."))
            return check_temperature(temp, params, "wut_webtherm_%s" % item)


check_info["wut_webtherm"] = {
    'default_levels_variable'   : "wut_webtherm_defaultlevels",
    'inventory_function'        : inventory_wut_webtherm,
    'check_function'            : check_wut_webtherm,
    'service_description'       : 'Temperature %s',
    'has_perfdata'              : True,
    'snmp_info'                 : ('.1.3.6.1.4.1.5040.1.2',
                                    ['1', '2', '3', '6', '7', '8', '9', '16', '18'],
                                    ['1.2.1.1', '1.3.1.1']
    ),
    'snmp_scan_function'        : detect_webtherm,
    'group'                     : 'temperature',
    'includes'                  : [ 'temperature.include' ],
}
