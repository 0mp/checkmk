#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

hr_cpu_default_levels = (80.0, 90.0)
def inventory_hr_cpu(info):
    if len(info) >= 1:
        return [(None, "hr_cpu_default_levels")]

def check_hr_cpu(_no_item, params, info):
    num_cpus = 0
    util = 0
    for line in info:
        util += int(line[0])
        num_cpus += 1
    if num_cpus == 0:
        return 3, "No data found in SNMP output"
    util = float(util) / num_cpus
    return check_cpu_util(util, params)


# HOST-RESOURCES-MIB::hrSystemUptime.0

check_info["hr_cpu"] = {
    'check_function':          check_hr_cpu,
    'inventory_function':      inventory_hr_cpu,
    'service_description':     'CPU utilization',
    'has_perfdata':            True,
    'snmp_info':               ('.1.3.6.1.2.1.25.3.3.1', [2]),
    'snmp_scan_function':      lambda oid: \
         not not oid('.1.3.6.1.2.1.25.1.1.0') and not \
             ("linux" in oid(".1.3.6.1.2.1.1.1.0").lower()
              and oid(".1.3.6.1.4.1.2021.10.1.6.1")),
    'group':                   'cpu_utilization_os',
    'includes':                [ 'cpu_util.include' ],
}
