#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

datacore_poolallocation_default_values = (80, 90)

def inventory_datacore_poolallocation(info):
    for line in info:
        yield line[0], "datacore_poolallocation_default_values"

def check_datacore_poolallocation(item, params, info):
    warn, crit = params
    for poolname, allocated in info:
        if poolname == item:
            allocated = int(allocated)
            infotxt = "Poolallocation is at %.0f %%"  % allocated
            levels = " (levels at %.0f %%/%.0f %%)" % (warn, crit)
            perfdata = [("allocated", allocated, warn, crit)]

            state = 0
            if allocated >= crit:
                state = 2
                infotxt += levels
            elif allocated >= warn:
                state = 1
                infotxt += levels
            return state, infotxt, perfdata

check_info['datacore_poolallocation'] = {
    "check_function"          : check_datacore_poolallocation,
    "inventory_function"      : inventory_datacore_poolallocation,
    "service_description"     : "DataCore Poolallocation %s",
    "has_perfdata"            : True,
    "group"                   : "datacore_poolallocation",
}
