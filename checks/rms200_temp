#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

rms200_temp_default_levels = (25, 28)


def inventory_rms200_temp(info):
    return [ (x[0], "rms200_temp_default_levels") for x in info if x[2] != '0']


def check_rms200_temp(item, params, info):
    for line in info:
        if line[0] == item:
            status, infotext, perfdata = check_temperature(float(line[2])/100, params)
            infotext += " (%s)" % line[1]   # Name from SNMP data
            return status, infotext, perfdata


check_info["rms200_temp"] = {
    "check_function"        : check_rms200_temp,
    "inventory_function"    : inventory_rms200_temp,
    "service_description"   : "Temperature %s ",
    "has_perfdata"          : True,
    "group"                 : "room_temperature",
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.1909.13",
    "snmp_info"             : ( ".1.3.6.1.4.1.1909.13.1.1.1", [
                                                                1, # ID,
                                                                2, # Name,
                                                                5, # Temp
                                                              ] ),
    "includes"              : [ "temperature.include" ],
}

