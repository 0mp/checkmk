#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2010             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
#
# Author: Lars Michelsen <lm@mathias-kettner.de

# Example output of agent:
#<<<sylo>>>
#            7859            7859           10240
#
# Syntax of the hint file:
#
# +------------------------------------------+
# | in offset (Ascii, space padded, bytes)   |  16 Bytes
# +------------------------------------------+
# | out offset                               |  16 Bytes
# +------------------------------------------+
# | Size of sylo                             |  16 Bytes
# +------------------------------------------+
#
# The check_mk_agents add the mtime in front of the hint file contents

# 0: alive_report
# 1: warn fill level
# 2: crit fill level
sylo_default_levels = (60, 5, 25)

def inventory_sylo(checkname, info):
    if len(info[0]) == 4:
        return [ (None, "", "sylo_default_levels") ]
    else:
        return []

def check_sylo(item, params, info):
    if len(info[0]) == 4:
        status = 0
        msg = ""

        alive_report, warn, crit = params

        mtime = float(info[0][0])
        inOffset = float(info[0][1])
        outOffset = float(info[0][2])
        size = float(info[0][3])

        # CRIT: too old
        if mtime < time.time() - alive_report:
            status = 2
            mtime_date = datetime.fromtimestamp(mtime)
            msg += "Sylo not running (Hintfile mtime: %s) - " % (mtime_date)

        # Current fill state
        if inOffset == outOffset:
            bytesUsed = 0
        elif inOffset > outOffset:
            bytesUsed = inOffset - outOffset
        elif inOffset < outOffset:
            bytesUsed = size - outOffset + inOffset

        percUsed = bytesUsed / size * 100
        msg += "Silo is filled %.2f%%" % percUsed

        # CRIT/WARN: Filled up
        if percUsed >= crit and status < 2:
            status = 2
        elif percUsed >= crit and status < 1:
            status = 1

        perfdata = [
            ('inOffset', '%d' % inOffset, "", "", 0, size),
            ('outOffset', '%d' % outOffset, "", "", 0, size),
        ]

        return (status, "%s - %s" % (['OK','WARN', 'CRIT'][status], msg) , perfdata)

    return (3, "UNKNOWN - Invalid hint file contents: " % info)


check_info['sylo'] = (check_sylo, "Sylo", 1, inventory_sylo)
