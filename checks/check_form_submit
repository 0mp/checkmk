#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def check_form_submit_arguments(params):
    description, settings = params
    args = ''

    if "virthost" in settings:
        args += ' -H %s' % quote_shell_string(settings["virthost"])

    if "port" in settings:
        args += ' -p %d' % settings["port"]

    if "uri" in settings:
        args += ' -u %s' % quote_shell_string(settings["uri"])

    if settings.get("ssl"):
        args += ' -s'

    if "timeout" in settings:
        args += ' -t %d' % settings["timeout"]

    if "expect_regex" in settings:
        args += ' -e %s' % quote_shell_string(settings["expect_regex"])

    if "form_name" in settings:
        args += ' -f %s' % quote_shell_string(settings["form_name"])

    if "query" in settings:
        args += ' -q %s' % quote_shell_string(settings["query"])

    if "num_succeeded" in settings:
        args += ' -n %s' % ','.join(map(str, settings["num_succeeded"]))

    if not settings.get('hosts'):
        args += " -I $HOSTADDRESS$"
    else:
        for address in settings['hosts']:
            args += " -I %s" % quote_shell_string(address)

    return args


active_check_info['form_submit'] = {
    "command_line"        : '$USER1$/check_form_submit $ARG1$',
    "argument_function"   : check_form_submit_arguments,
    "service_description" : lambda params: "FORM %s" % params[0],
    "has_perfdata"        : False,
}

