#!/usr/bin/python
#<<<websphere_mq_channels>>>
#0   CHANNEL(C000052.C000051)  5000  Unknown
#0   CHANNEL(C000052.CATSOS.03)  5000  RUNNING
#0   CHANNEL(C000052.DXUZ001)  5000  RUNNING
#0   CHANNEL(C000052.N000011)  5000  RUNNING
#0   CHANNEL(C000052.SI0227450.T1)  10000  RUNNING
#0   CHANNEL(C000052.SOX10.T1)  10000  STOPPED
#0   CHANNEL(C000052.SV1348520.T1)  5000  RUNNING
#0   CHANNEL(C000052.SV2098742.T1)  5000  Unknown

# Anzahl_Message Channelname MaxMessages_Moeglich Status"

websphere_mq_channels_default_levels = ( 900, 1000 )
def inventory_websphere_mq_channels(info):
    return [ ( x[1], 'websphere_mq_channels_default_levels' ) for x in info ]

def check_websphere_mq_channels(item, params, info):
    for messages, channel, max_messages, status in info:
        if channel == item:
            warn, crit = params
            messages = saveint(messages)
            max_messages = saveint(max_messages)
            state = 0
            message = "%d/%d Messages" % ( messages, max_messages)
            if messages >= crit:
                state = 2
                message += "(!!)"
            elif messages >= warn:
                state = 1
                message += "(!)"

            message += ", Channel State: %s" % status
            if status not in [ 'RUNNING' ]:
                state = 2
                message += "(!!)"
            perf = [ ('messages', messages, warn, crit, 0, max_messages) ]
            return state, message, perf
    return 3, "Channel not found in output"


check_info["websphere_mq_channels"] = {
    "group"                 : "websphere_mq",
    "check_function"        : check_websphere_mq_channels,
    "inventory_function"    : inventory_websphere_mq_channels,
    "service_description"   : "MQ Channel %s",
    "has_perfdata"          : True,
}

