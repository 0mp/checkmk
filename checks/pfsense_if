#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

factory_settings["pfsense_if_default_levels"] = {
    "ipv4_in_blocked"       : (100.0, 10000.0),
    "average"               : 3,
}

def parse_pfsense_if(info):
    parsed = {}
    for line in info:
        parsed[line[0]] = { "ip4_in_blocked" : int(line[1]) }
    return parsed


def inventory_pfsense_if(parsed):
    for item in parsed:
        yield item, {}


check_info["pfsense_if"] = {
    "parse_function"            : parse_pfsense_if,
    "inventory_function"        : inventory_pfsense_if,
    "default_levels_variable"   : "pfsense_if_default_levels",
    "check_function"            : check_firewall_if,
    "service_description"       : "Firewall Interface %s",
    "snmp_info"                 : (".1.3.6.1.4.1.12325.1.200.1.8.2.1", [
                                    "2",  # pfInterfacesIfDescr
                                    "12", # pfInterfacesIf4PktsInBlock
                                    ]),
    "snmp_scan_function"        : lambda oid: "pfsense" in oid(".1.3.6.1.2.1.1.1.0").lower(),
    "includes"                  : [ "firewall_if.include" ],
    "group"                     : "firewall_if",
}
