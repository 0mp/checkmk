#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def check_smtp_arguments(params):
    description, settings = params
    args = ''

    if "expect" in settings:
        args += ' -e %s' % quote_shell_string(settings["expect"])

    if "port" in settings:
        port = int(settings["port"]) # ValueSpec was broken, convert to int
        args += ' -p %d' % port

    if "ip_version" in settings:
        if settings['ip_version'] == 'ipv4':
            args += ' -4'
        else:
            args += ' -6'

    for s in settings.get("commands", []):
        args += ' -C %s' % quote_shell_string(s)

    for s in settings.get("command_responses", []):
        args += ' -R %s' % quote_shell_string(s)

    if settings.get('from'):
        args += ' -f %s' % quote_shell_string(settings["from"])

    if "response_time" in settings:
        args += ' -w %d -c %d' % (
            settings["response_time"][0],
            settings["response_time"][1])

    if "timeout" in settings:
        args += ' -t %d' % settings["timeout"]

    if "auth" in settings:
        auth = settings["auth"]
        args += ' -A LOGIN -U %s -P %s' % (quote_shell_string(auth[0]), quote_shell_string(auth[1]))

    if settings.get('starttls', False):
        args += ' -S'

    if 'fqdn' in settings:
        args += ' -F %s' % quote_shell_string(settings['fqdn'])

    if 'cert_days' in settings:
        args += ' -D %d' % settings['cert_days']

    if 'hostname' in settings:
        args += ' -H %s' % settings['hostname']
    else:
        args += ' -H $HOSTADDRESS$'
    return args

def check_smtp_desc(params):
    if params[0].startswith("^"):
        return params[0][1:]
    return "SMTP %s" % params[0]

active_check_info['smtp'] = {
    "command_line"        : '$USER1$/check_smtp $ARG1$',
    "argument_function"   : check_smtp_arguments,
    "service_description" : check_smtp_desc,
    "has_perfdata"        : True,
}

