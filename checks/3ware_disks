#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2010             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# inventory
def inventory_3ware_disks(checkname, info):
    inventory = []
    for line in info:
	disk = line[0]
	inventory.append( (disk, None) )
    return inventory

# check
def check_3ware_disks(item, params, info):
    for line in info:
	status = str(line[1])
	if status == "OK":
	    unit_type = str(line[2])
	    size = str(line[3])
	    size_type = str(line[4])
	    type = str(line[5])
	    model = str(line[8])
	    infotext = "%s (unit: %s, size: %s,%s, typ: %s, model: %s)" % (status, unit_type, size, size_type, type, model)
	    return (0, "OK - disk status is " + infotext)
	else:
	    return (2, "CRITICAL - disk status is " + infotext)
    return (3, "UNKNOWN - disk %s not found in agent output" % item) 

# declare the check to Check_MK
check_info['3ware_disks'] = \
	(check_3ware_disks, "RAID 3ware disk %s", 0, inventory_3ware_disks)
