#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def inventory_kentix_temp(info):
    if info:
        return [ ("Rack", {} ) ]

def check_kentix_temp(item, params, info):
    value, lower_warn, upper_warn, alarm, text = info[0]
    temp = float(value)/10

    return check_temperature(temp, params, dev_levels = (float(upper_warn), float(upper_warn)),
                                     dev_levels_lower = (float(lower_warn), float(lower_warn)))

check_info["kentix_temp"] = {
    'check_function'        :          check_kentix_temp,
    'inventory_function'    :      inventory_kentix_temp,
    'service_description'   :     'Temperature %s',
    'has_perfdata'          :            True,
    'snmp_info'             :    ('.1.3.6.1.4.1.37954.3.1.1',
                                    ['1', # temperatureValue
                                     '2', # temperatureMin
                                     '3', # temperatureMax
                                     '4', # temperatureAlarm, not used here
                                     '5', # temperatureAlarmtext
                                 ]),
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.332.11.6"),
    "group"                 : "temperature",
    "includes"              : [ "temperature.include" ],
}
