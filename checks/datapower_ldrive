#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def inventory_datapower_ldrive(info):
    for controller, ldrive, raid_level, num_drives, status in info:
        item = "%s-%s" % (controller, ldrive)
        yield item, None

def check_datapower_ldrive(item, _no_params, info):
    datapower_ldrive_status = {
        "1": (2, "offline"),
        "2": (2, "partially degraded"),
        "3": (2, "degraded"),
        "4": (0, "optimal"),
        "5": (1, "unknown"),
    }
    datapower_ldrive_raid = {
        "1": "0",
        "2": "1",
        "3": "1E",
        "4": "5",
        "5": "6",
        "6": "10",
        "7": "50",
        "8": "60",
        "9": "undefined",
    }
    for controller, ldrive, raid_level, num_drives, status in info:
        if item == "%s-%s" % (controller, ldrive):
            state, state_txt = datapower_ldrive_status[status]
            raid_level = datapower_ldrive_raid[raid_level]
            infotext = "Status: %s, RAID Level: %s, Number of Drives: %s"\
                    % (state_txt, raid_level, num_drives)
            return state, infotext

check_info['datapower_ldrive'] = {
  "inventory_function"      : inventory_datapower_ldrive,
  "check_function"          : check_datapower_ldrive,
  "service_description"     : "Logical Drive %s",
  "snmp_info"               : ( ".1.3.6.1.4.1.14685.3.1.259.1", [
                                  "1", # dpStatusRaidLogicaldrivetatusControllerID
                                  "2", # dpStatusRaidLogicaldrivetatusLogicalDriveID
                                  "4", # dpStatusRaidLogicaldrivetatusRaidLevel
                                  "5", # dpStatusRaidLogicaldrivetatusNumPhysicalDrives
                                  "6", # dpStatusRaidLogicaldrivetatusState
                              ]),
  "snmp_scan_function"      : lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.14685.1.7",


}
