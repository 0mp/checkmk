#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de


apc_humidity_default_levels = (35, 40, 60, 65)


def inventory_apc_humidity(info):
    for line in info:
        if int(line[1]) >= 0:
            yield  line[0], "apc_humidity_default_levels"

def check_apc_humidity(item, params, info):
    for line in info:
        if line[0] == item:
            humidity = saveint(line[1])
            critlow, warnlow, warnhigh, crithigh = params
            infotext = "%s%% (warn/crit below %.1f/%.1f or above %.1f/%.1f %%)" % \
                            ( humidity, warnlow, critlow, warnhigh, crithigh)
            perfdata = [ ( "humidity", humidity, critlow, warnlow, warnhigh, crithigh ) ]
            if humidity <= critlow or humidity >= crithigh:
                return (2, "Humidity is: " + infotext, perfdata )
            elif humidity <= warnlow or humidity >= warnhigh:
                return (1, "Humidity is: " + infotext, perfdata )
            else:
                return (0, "Humidity is: " + infotext, perfdata )

    return (3, "sensor not found in SNMP data")


check_info["apc_humidity"] = {
    'check_function':          check_apc_humidity,
    'inventory_function':      inventory_apc_humidity,
    'service_description':     'Humidity %s',
    'has_perfdata':            True,
    'snmp_info':               ('.1.3.6.1.4.1.318.1.1.10.4.2.3.1', ['3', '6']),
    'snmp_scan_function':      lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.318.1.3"),
    'group':                   'humidity',
}
