#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |                     _           _           _                    |
# |                  __| |_  ___ __| |__  _ __ | |__                 |
# |                 / _| ' \/ -_) _| / / | '  \| / /                 |
# |                 \__|_||_\___\__|_\_\_|_|_|_|_\_\                 |
# |                                   |___|                          |
# |              _   _   __  _         _        _ ____               |
# |             / | / | /  \| |__  ___| |_ __ _/ |__  |              |
# |             | |_| || () | '_ \/ -_)  _/ _` | | / /               |
# |             |_(_)_(_)__/|_.__/\___|\__\__,_|_|/_/                |
# |                                            check_mk 1.1.0beta17  |
# |                                                                  |
# | Copyright Mathias Kettner 2009             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
# 
# This file is part of check_mk 1.1.0beta17.
# The official homepage is at http://mathias-kettner.de/check_mk.
# 
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_fsc_temp(checkname, info):
   return [ (line[0], int(line[1]), None) for line in info if int(line[1]) < 500 ]

def check_fsc_temp(item, no_params, info):
   for line in info: # , value1, value2 in info:
      name = line[0]
      if name != item: continue
      current = int(line[1])
      warn = int(line[2])
      crit = int(line[3])
      infotext = "%d C (levels at %d C / %d C)" % (current, warn, crit)
      perfdata = [ ("temp", current, warn, crit, 0 ) ]
      if current >= crit and crit > 0:
          return (2, "CRIT - %s" % infotext, perfdata)
      elif current >= warn and warn > 0:
          return (1, "WARNING - %s" % infotext, perfdata)
      else:
          return (0, "OK - %s" % infotext, perfdata)
         
   return (3, "UNKNOWN - Sensor %s not found in SNMP data" % item)

check_info['fsc_temp'] = (check_fsc_temp, "FSC TEMP %s", 1,  inventory_fsc_temp)
snmp_info['fsc_temp'] = ( "enterprises.231.2.10.2.2.5.2.1.1", [ 13, 11, 6, 8 ] )
