#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def check_viprinet_firmware(_no_item, _no_params, info):
    fw_status_map = {
        "0": "No new firmware available",
        "1": "Update Available",
        "2": "Checking for Updates",
        "3": "Downloading Update",
        "4": "Installing Update"
    }
    fw_status = fw_status_map.get(info[0][1])
    if fw_status:
        return (0, "%s, %s" % (info[0][0], fw_status))
    else:
        return (3, "%s, no firmware status available")


check_info["viprinet_firmware"] = {
    'check_function'        : check_viprinet_firmware,
    'inventory_function'    : lambda info: len(info) > 0 and [(None, None)] or [],
    'service_description'   : "Firmware Version",
    'has_perfdata'          : False,
    'snmp_info'             : (".1.3.6.1.4.1.35424.1.1", [4, 7]),
    'snmp_scan_function'    : lambda oid: oid(".1.3.6.1.2.1.1.2.0") in [".1.3.6.1.4.1.35424"],
}
