#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def check_dns_arguments(params):
    description, settings = params
    args = '-H %s' % quote_shell_string(description)

    if "server" in settings:
        if settings["server"] != None:
            args += ' -s %s' % quote_shell_string(settings["server"])
    else:
        args += " -s '$HOSTADDRESS$'"

    if "expected_address" in settings:
        # Convert from old (str) to new (list of strings)
        exp = settings["expected_address"]
        if type(exp) in ( str, unicode ):
            exp = [ exp ]
        for entry in exp:
            args += ' -a %s' % quote_shell_string(entry)

    if settings.get("expected_authority"):
        args += ' -A'

    if "response_time" in settings:
        args += ' -w %d' % int(settings["response_time"][0])
        args += ' -c %d' % int(settings["response_time"][1])

    if "timeout" in settings:
        args += ' -t %d' % int(settings['timeout'])

    return args

def check_dns_desc(params):
    if "name" in params[1]:
        return params[1]['name']
    return "DNS %s" % params[0]

active_check_info['dns'] = {
    "command_line"        : '$USER1$/check_dns $ARG1$',
    "argument_function"   : check_dns_arguments,
    "service_description" : check_dns_desc,
    "has_perfdata"        : True,
}

