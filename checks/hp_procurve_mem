#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

# Author: Lars Michelsen <lm@mathias-kettner.de>

# Relevant SNMP OIDs:
# hpLocalMemTotalBytes   1.3.6.1.4.1.11.2.14.11.5.1.1.2.1.1.1.5
# hpLocalMemFreeBytes    1.3.6.1.4.1.11.2.14.11.5.1.1.2.1.1.1.6
# hpLocalMemAllocBytes   1.3.6.1.4.1.11.2.14.11.5.1.1.2.1.1.1.7

factory_settings["hp_procurve_mem_default_levels"] = { "levels" : ("perc_used", (80, 90)) }


def inventory_hp_procurve_mem(info):
    if len(info) == 1 and int(info[0][0]) >= 0:
        return [ ("", 'hp_procurve_mem_default_levels') ]


def check_hp_procurve_mem(item, params, info):
    if len(info) == 1:
        mem_total, mem_used = [ int(mem) for mem in info[0] ]
        return check_memory_simple(mem_used, mem_total, params)


check_info["hp_procurve_mem"] = {
    'check_function'           : check_hp_procurve_mem,
    'inventory_function'       : inventory_hp_procurve_mem,
    'service_description'      : 'Memory',
    'group'                    : 'memory_simple',
    'default_levels_variable'  : 'hp_procurve_mem_default_levels',
    'has_perfdata'             : True,
    'snmp_info'                : ('.1.3.6.1.4.1.11.2.14.11.5.1.1.2.1.1.1', ['5', '7']),
    'snmp_scan_function'       : lambda oid: ".11.2.3.7.11" in oid(".1.3.6.1.2.1.1.2.0") \
                                          or ".11.2.3.7.8"  in oid(".1.3.6.1.2.1.1.2.0"),
    'includes'                 : [ "memory.include" ],
}
