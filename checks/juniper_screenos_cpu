#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

juniper_screenos_cpu_default_levels = ( 80.0, 90.0 )

def inventory_juniper_screenos_cpu(info):
    return [ (None , "juniper_screenos_cpu_default_levels" ) ]

def check_juniper_screenos_cpu(_no_item, params, info):
    util1, util15 = map(float, info[0])
    warn, crit = params
    label15 = ""
    state = 0
    if util15 >= crit:
        state = 2
        label15 = "(!!)"
    elif util15 >= warn:
        state = max(state,1)
        label15 = "(!)"

    perf = [( "util1", util1, warn, crit ),
            ( "util15", util15, warn, crit )]

    message = "%d%% 1min, %d%% 15min%s (warn/crit at %d%%/%d%%)" % \
              ( util1, util15, label15, warn, crit )
    return state, message, perf

check_info["juniper_screenos_cpu"] = {
    "check_function"        : check_juniper_screenos_cpu,
    "inventory_function"    : inventory_juniper_screenos_cpu,
    "group"                 : "cpu_utilization",
    "service_description"   : "CPU utilization",
    "has_perfdata"          : True,
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.3224.1"),
    "snmp_info"             : (".1.3.6.1.4.1.3224.16.1",[
                                                             2, # jnxOperating1MinLoadAvg
                                                             4, # jnxOperating15MinLoadAvg
                                                         ])
}
