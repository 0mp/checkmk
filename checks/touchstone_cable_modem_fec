#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

factory_settings["touchstone_cable_modem_fec_default_levels"] = {
        "corrected"     : ( 25.0 , 30.0 ),
        "uncorrected"   : ( 25.0 , 30.0 ),
}

def inventory_touchstone_cable_modem_fec(info):
    return [ (None, {}) ]

def check_touchstone_cable_modem_fec(_no_item, params, info):
    fec = {}
    good, fec['corrected'], fec['uncorrected'] = map(float, info[0])
    fec['corrected_perc']   = ( fec['corrected'] / good ) * 100
    fec['uncorrected_perc'] = ( fec['uncorrected'] / good ) * 100

    for what in [ 'corrected', 'uncorrected' ]:
        warn, crit = params[what]
        state = 0
        if fec[what+"_perc"] >= crit:
            state = 2
        elif fec[what+"_perc"] >= warn:
            state = 1
        yield state, "FEC %s at %.2f%%" % ( what, fec[what+"_perc"] ), [ ( what, fec[what], warn, crit ) ]
    yield 0, "Total: %d codewords" % good, [('total', good )]

check_info["touchstone_cable_modem_fec"] = {
    "check_function"          : check_touchstone_cable_modem_fec,
    "inventory_function"      : inventory_touchstone_cable_modem_fec,
    "service_description"     : "FEC",
    "snmp_scan_function"      : lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.4115.820.1.0.0.0.0.0",
    "snmp_info"               : ( ".1.3.6.1.2.1.10.127.1.1.4.1", [ 2, 3, 4 ]),
    "default_levels_variable" : "touchstone_cable_modem_fec_default_levels",
    "group"                   : "fec",
}

