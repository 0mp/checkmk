#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

wagner_titanus_topsense_info = [(".1.3.6.1.2.1.1",               [1,          # sysDescr
                                                                  3,          # sysUpTimeInstance
                                                                  4,          # sysContact
                                                                  5,          # sysName
                                                                  6]),        # sysLocation
                                (".1.3.6.1.4.1.34187.21501.1.1", [1,          # company
                                                                  2,          # model
                                                                  3,          # revision
                                                                  1006]),     # pswFailureDisplayOn
                                                                              # off(0), on(1)
                                (".1.3.6.1.4.1.34187.21501.2.1", [24584008]), # tsLSNbusOnline
                                                                              # offline(0),online(1)
                  ]

def wagner_titanus_topsense_scan(oid):
    return oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.34187.21501")

#   .--titanus info--------------------------------------------------------.
#   |         _   _ _                          _        __                 |
#   |        | |_(_) |_ __ _ _ __  _   _ ___  (_)_ __  / _| ___            |
#   |        | __| | __/ _` | '_ \| | | / __| | | '_ \| |_ / _ \           |
#   |        | |_| | || (_| | | | | |_| \__ \ | | | | |  _| (_) |          |
#   |         \__|_|\__\__,_|_| |_|\__,_|___/ |_|_| |_|_|  \___/           |
#   |                                                                      |
#   '----------------------------------------------------------------------'

def inventory_wagner_titanus_topsense_info(info):
    return [ (None, None) ]

def check_wagner_titanus_topsense_info(item, _no_params, info):
    ts_lsn_bus = info[2][0][0]
    if ts_lsn_bus == "0":
        ts_lsn_bus = "offline"
    elif ts_lsn_bus == "1":
        ts_lsn_bus = "online"
    else:
        ts_lsn_bus = "unknown"

    message  = "System: " + info[0][0][0]
    message += ", Uptime: " + get_age_human_readable(int(info[0][0][1]) / 100)
    message += ", System Name: " + info[0][0][3]
    message += ", System Contact: " + info[0][0][2]
    message += ", System Location: " + info[0][0][4]
    message += ", Company: " + info[1][0][0]
    message += ", Model: " + info[1][0][1]
    message += ", Revision: " + info[1][0][2]
    message += ", LSNi bus: " + ts_lsn_bus
    return 0, message

check_info["wagner_titanus_topsense.info"] = {
    "check_function"        : check_wagner_titanus_topsense_info,
    "inventory_function"    : inventory_wagner_titanus_topsense_info,
    "service_description"   : "Topsense Info",
    "has_perfdata"          : False,
    "snmp_info"             : wagner_titanus_topsense_info,
    "snmp_scan_function"    : wagner_titanus_topsense_scan
}

#.
#   .--overall status------------------------------------------------------.
#   |                               _ _       _        _                   |
#   |       _____   _____ _ __ __ _| | |  ___| |_ __ _| |_ _   _ ___       |
#   |      / _ \ \ / / _ \ '__/ _` | | | / __| __/ _` | __| | | / __|      |
#   |     | (_) \ V /  __/ | | (_| | | | \__ \ || (_| | |_| |_| \__ \      |
#   |      \___/ \_/ \___|_|  \__,_|_|_| |___/\__\__,_|\__|\__,_|___/      |
#   |                                                                      |
#   '----------------------------------------------------------------------'


def inventory_wagner_titanus_topsense_overall_status(info):
    return [ (None, None) ]

def check_wagner_titanus_topsense_overall_status(item, _no_params, info):
    psw_failure = info[1][0][3]
    status = 3
    if psw_failure == "0":
        message = "Overall Status reports OK"
        status = 0
    else:
        message = "Overall Status reports a problem"
        status = 2
    return status, message

check_info["wagner_titanus_topsense.overall_status"] = {
    "check_function"        : check_wagner_titanus_topsense_overall_status, 
    "inventory_function"    : inventory_wagner_titanus_topsense_overall_status,
    "service_description"   : "Overall Status",
    "has_perfdata"          : False,
    "snmp_info"             : wagner_titanus_topsense_info,
    "snmp_scan_function"    : wagner_titanus_topsense_scan
}

#.
