#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def inventory_enterasys_fans(info):
    return [ (x[0], None) for x in info if x[1] != '2' ]

def check_enterasys_fans(item, _no_params, info):
    fan_states = {
        "1" : "info not available",
        "2" : "not installed",
        "3" : "installed and operating",
        "4" : "installed and not operating",
    }
    for num, state in info:
        if num == item:
            message = "FAN State: %s" % ( fan_states[state] )
            if state in [ "1", "2" ]:
                return 3, message
            if state == "4":
                return 2, message
            return 0, message


check_info["enterasys_fans"] = {
    "check_function"        : check_enterasys_fans,
    "inventory_function"    : inventory_enterasys_fans,
    "service_description"   : "FAN %s",
    "snmp_info"             : ( ".1.3.6.1.4.1.52.4.3.1.3.1.1", [ OID_END, 2 ]),
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.5624.2.1") \
                                        or oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.5624.2.2"),
}

