#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

factory_settings["datapower_cpu_default_levels"] = {
    "levels" : (80, 90),
}

def inventory_datapower_cpu(info):
    if info:
        return [ (None, {}) ]

def check_datapower_cpu(_no_item, params, info):
    util = int(info[0][0])
    return check_cpu_util(util, params)


check_info['datapower_cpu'] = {
  "inventory_function"      : inventory_datapower_cpu,
  "check_function"          : check_datapower_cpu,
  "service_description"     : "CPU Utilization",
  "snmp_info"               : ( ".1.3.6.1.4.1.14685.3.1.14", [
                                  "2",  # dpStatusCPUUsageoneMinute
                              ]),
  "snmp_scan_function"      : lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.14685.1.7",
  "includes"                : [ "cpu_util.include" ],
  "group"                   : "cpu_utilization",
  "default_levels_variable" : "datapower_cpu_default_levels",
  "has_perfdata"            : True,
}
