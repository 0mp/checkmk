#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

fortigate_cpu_base_default_levels = (80.0, 90.0)

def inventory_fortigate_cpu_base(info):
    return [(None, "fortigate_cpu_base_default_levels")]

def check_fortigate_cpu_base(item, params, info):
    num_cpus = 0
    util = 0
    for line in info:
        util += int(line[0])
        num_cpus += 1
    if num_cpus == 0:
        return

    util = float(util) / num_cpus

    state, infotext, perfdata = check_cpu_util(util, params)
    infotext += " at %d CPUs" % num_cpus

    return state, infotext, perfdata

check_info["fortigate_cpu_base"] = {
    "inventory_function"    : inventory_fortigate_cpu_base,
    "check_function"        : check_fortigate_cpu_base,
    "service_description"   : "CPU utilization",
    "has_perfdata"          : True,
    "group"                 : "cpu_utilization",
    # uses mib FORTINET-FORTIGATE-MIB
    "snmp_scan_function"    : lambda oid: ".1.3.6.1.4.1.12356.101.1" in oid(".1.3.6.1.2.1.1.2.0") and\
                                     oid(".1.3.6.1.4.1.12356.101.4.1.3.0"),
    "snmp_info"		        : ( ".1.3.6.1.4.1.12356.101.4.1", [ 3 ]),
    "includes"               : [ "cpu_util.include" ],
}

