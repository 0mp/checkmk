# Example for info:
# [['HTTP',  '1', '1682'], 
#  ['SMTP',  '1', '216'], 
#  ['POP3',  '1', '0'], 
#  ['FTP',   '1', '1'], 
#  ['HTTPS', '2', '0'], 
#  ['IMAP',  '1', '48']]

cpsecure_sessions_default_levels = ( 2500, 5000 )

def inventory_cpsecure_sessions(checkname, info):
    inventory = []
    for service, enabled, sessions in info:
	if enabled == '1':
	    inventory.append( (service, "cpsecure_sessions_default_levels") )
    return inventory 

def check_cpsecure_sessions(item, params, info):
    for service, enabled, sessions in info:
	if item == service:
	    if enabled != '1':
		return (1, "WARN - service not enabled")
	    num_sessions = int(sessions)
            warn, crit = params
            perfdata = [ ("sessions", num_sessions, warn, crit, 0 ) ]

            if num_sessions >= crit:
		return (2, "CRIT - %s sessions (critical at %d)" % (sessions, crit), perfdata)
	    elif num_sessions >= warn:
		return (1, "WARN - %s sessions (warning at %d)" % (sessions, warn), perfdata)
	    else:
	        return (0, "OK - %s sessions" % sessions, perfdata)

    return (3, "UNKNOWN - service not found")

check_info["cpsecure_sessions"] = \
      (check_cpsecure_sessions, "Number of %s sessions", 1, inventory_cpsecure_sessions)

snmp_info["cpsecure_sessions"] = ( ".1.3.6.1.4.1.26546.3.1.2.1.1.1", [ "1", "2", "3" ] )

snmp_scan_functions["cpsecure_sessions"] = \
    lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.26546.1.1.2"
