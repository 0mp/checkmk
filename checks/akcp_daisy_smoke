#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Example for contents of info
#           description                 state
# ['Port 4 Rauchmelder USV Raum A',      '2'],
# ['Port 5 Rauchmelder USV Raum B',      '2'],
# ['Port 5 Rauchmelder Warmgang links',  '2'],
# ['Port 4 Rauchmelder Warmgang rechts', '2'],
# ['Port 6 Rauchmelder RZ Klima',        '2']


def inventory_akcp_daisy_smoke(info):
    for line in info:
        yield line[0], None


def check_akcp_daisy_smoke(item, _no_params, info):
    # States as they are defined in corresponding MIB: SPAGENT-MIB
    states = {
        '1' : (3, 'no status'     ),
        '2' : (0, 'normal'        ),
        '4' : (2, 'high critical' ),
        '6' : (2, 'low critical'  ),
        '7' : (2, 'sensor error'  ),
        '8' : (3, 'relay on'      ),
        '9' : (3, 'relay off'     ),
    }

    for sensor_description, state_id in info:
        if item == sensor_description:
            state, state_name = states[state_id]
            return state, 'State: %s' % state_name


check_info['akcp_daisy_smoke'] = {
    'check_function'      : check_akcp_daisy_smoke,
    'inventory_function'  : inventory_akcp_daisy_smoke,
    'service_description' : 'Smoke %s',
    'snmp_scan_function'  : lambda oid: oid('.1.3.6.1.2.1.1.2.0').startswith('.1.3.6.1.4.1.3854.1') and oid('.1.3.6.1.4.1.3854.2.*'),
    'snmp_info'           : ( '.1.3.6.1.4.1.3854.2.3.14.1', [
                                         2,  # SPAGENT-MIB:sensorSmokeDescription
                                         6,  # SPAGENT-MIB:sensorSmokeStatus
                                         ] ),
}
