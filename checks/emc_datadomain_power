#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def inventory_emc_datadomain_power(info):
    inventory = []
    for line in info:
        item = line[0]+"-"+line[1]
        inventory.append((item, None))
    return inventory

def check_emc_datadomain_power(item, _no_params, info):
    state_table = { "0": ("Absent", 0),
                    "1": ("OK", 0),
                    "2": ("Failed", 2),
                    "3": ("Faulty", 2),
                    "4": ("Acnone", 1),
                   "99": ("Unknown", 3),
                    }
    for line in info:
        if item == line[0]+"-"+line[1]:
            dev_descr = line[2]
            dev_state = line[3]
            dev_state_str = state_table.get(dev_state,("Unknown",3))[0]
            dev_state_rc = state_table.get(dev_state,("Unknown",3))[1]
            infotext = "%s Status %s" % ( dev_descr, dev_state_str )
            return dev_state_rc, infotext

check_info["emc_datadomain_power"] = {
    "check_function"        : check_emc_datadomain_power,
    "inventory_function"    : inventory_emc_datadomain_power,
    "service_description"   : "Power Module %s",
    "has_perfdata"          : False,
    "snmp_info"             : (".1.3.6.1.4.1.19746.1.1.1.1.1.1",
                                       [
                                            1, # powerEnclosureID
                                            2, # powerModuleIndex
                                            3, # powerModuleDescription
                                            4, # powerModuleStatus
                                       ]
                            ),
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.1.0").startswith("Data Domain OS")
}

