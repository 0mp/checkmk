#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2016             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# .1.3.6.1.4.1.3375.2.1.14.1.4.0 --> F5-BIGIP-SYSTEM-MIB::sysCmFailoverStatusId
# .1.3.6.1.4.1.3375.2.1.14.3.4.0 1/1 active --> F5-BIGIP-SYSTEM-MIB::sysCmFailoverStatusDetails
# See also https://support.f5.com/kb/en-us/solutions/public/14000/300/sol14399.html


def inventory_f5_bigip_cluster_failover(info):
    if info:
        return [ (None, {}) ]


def check_f5_bigip_cluster_failover(_no_item, params, info):
    map_states = {
        "0" : (3, "unknown"),
        "1" : (2, "offline"),
        "2" : (2, "forced offline"),
        "3" : (0, "standby"),
        "4" : (0, "active"),
    }

    failover_state, details = info[0]
    default_state, state_readable = map_states[failover_state]
    if failover_state in params:
        state = params[failover_state]
    else:
        state = default_state
    return state, 'Status: %s, Details: %s' % (state_readable, details)


check_info['f5_bigip_cluster_failover'] = {
    'inventory_function'    : inventory_f5_bigip_cluster_failover,
    'check_function'        : check_f5_bigip_cluster_failover,
    'service_description'   : 'Cluster failover status',
    'snmp_info'             : ('.1.3.6.1.4.1.3375.2.1.14.3', [
                                    "1",    # F5-BIGIP-SYSTEM-MIB::sysCmFailoverStatusId
                                    "4",    # F5-BIGIP-SYSTEM-MIB::sysCmFailoverStatusDetails
                              ]),
    'snmp_scan_function'    : lambda oid: '.1.3.6.1.4.1.3375.2' in oid('.1.3.6.1.2.1.1.2.0') and \
                                          'big-ip' in oid('.1.3.6.1.4.1.3375.2.1.4.1.0').lower(),
    'group'                 : 'f5_bigip_cluster_failover_state',
}
