#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

aironet_default_error_levels = ( 1.0, 10.0 ) # per second

def inventory_aironet_errors(info):
    return [ (int(line[0]), 'aironet_default_error_levels') for line in info ]

def check_aironet_errors(item, params, info):
    for line in info:
        if int(line[0]) == item:
            value = int(line[1])
            this_time = time.time()
            persec = get_rate("aironet_errors.%s" % item, this_time, value)
            warn, crit = params
            perfdata = [("errors", persec, None, None, warn, crit)]
            infotxt = "%.2f errors/s" % persec
            if persec >= crit:
                return (2, infotxt, perfdata)
            elif persec >= warn:
                return (1, infotxt, perfdata)
            else:
                return (0, infotxt, perfdata)

    return (3, "No radio %s available" % item)


check_info["aironet_errors"] = {
    'check_function':          check_aironet_errors,
    'inventory_function':      inventory_aironet_errors,
    'service_description':     'MAC CRC errors radio %s',
    'has_perfdata':            True,
    # CISCO-DOT11-IF-MIB::cd11IfRecFrameMacCrcErrors
    'snmp_info':               ('.1.3.6.1.4.1.9.9.272.1.2.1.1.1', [0, 2]),
    'snmp_scan_function':      \
          lambda oid: oid(".1.3.6.1.2.1.1.2.0") in [
                               ".1.3.6.1.4.1.9.1.525",
                               ".1.3.6.1.4.1.9.1.618",
                               ".1.3.6.1.4.1.9.1.685",
                               ".1.3.6.1.4.1.9.1.758",
                               ".1.3.6.1.4.1.9.1.1034",
                               ".1.3.6.1.4.1.9.1.1247",
                           ],
}
