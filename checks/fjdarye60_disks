#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2009             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
# 
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
# 
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# available(1), broken(2), notavailable(3), notsupported(4), present(5),
# readying(6), recovering(7), partbroken(64), spare(65), formatting(66),
# unformatted(67), notexist(68), copying(69)
fjdarye60_disks_status = { 1: 'available', 2: 'broken', 3: 'notavailable',
    4: 'notsupported', 5: 'present', 6: 'readying', 7: 'recovering',
    64: 'partbroken', 65: 'spare', 66: 'formatting', 67: 'unformated',
    68: 'notexist', 69: 'copying' }

def inventory_fjdarye60_disks(checkname, info):
    return [ (int(index), '', int(status)) for index, status in info if int(status) != 3 ]


def check_fjdarye60_disks(index, expected_status, info):
    for line in info:
        if int(line[0]) == index:
            status = int(line[1])

            if status == expected_status:
                return (0, "OK - Status is %s" % fjdarye60_disks_status[status])
            else:
                return (2, "CRIT - Status is %s (Expected status is %s)" % (fjdarye60_disks_status[status],
                                                                          fjdarye60_disks_status[expected_status]))

    return (3, "UNKNOWN - No status for disk number %d present" % index)

check_info['fjdarye60_disks'] = (check_fjdarye60_disks, "Disk %s", 0,  inventory_fjdarye60_disks)
# 1: fjdaryDiskIndex, 3: fjdaryDiskStatus
snmp_info['fjdarye60_disks'] = (".1.3.6.1.4.1.211.1.21.1.60.2.12.2.1", [ 1, 3 ])

# FIXME: Von System auslesen
#snmp_scan_functions['fjdarye60_disks'] \
#	= lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.9.1.685"
