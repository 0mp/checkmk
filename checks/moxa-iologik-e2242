#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# "0=Off, 1=On in DI/DO mode or N=Count in DO counter mode"
inventory_iologik_e2242_defaults = ( 1,1 )

def inventory_iologik_e2242(info):
    inventory = []
    for line in info:
        if line[0]:
            wert = int(line[0])
            inventory.append((wert, inventory_iologik_e2242_defaults))
    return inventory


def check_iologik_e2242(item, params, info):
    for line in info:
        if line[0]:
            crit = params
            status = int(line[0])
            infotext = "Status is: %s (warn/crit %s%s)" % ( status, warn, crit )
            perfdata = [ ("iologik_e2242.status", status, warn, crit) ]
            if status >= crit:
                state = 2
            elif status >= warn:
                state = 1
            else:
                state = 0
            return (state, infotext, perfdata )
    return (3, "UNKNOWN - Sensor not found")


check_info['moxa-iologik-e2242'] = {
    "check_function"        : check_iologik_e2242,
    "inventory_function"    : inventory_iologik_e2242,
    "service_description"   : "moxa iologik e2242 i/o unit",
    "has_perfdata"          : True,
    "group"                 : "iologik_e2242",
    #"snmp_scan_function"    : lambda oid: "E2242-T" in oid(".1.3.6.1.4.1.8691.10.2242.2.0"),
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.4.1.8691.10.2242.2.0").startswith("E2242-T"),
    "snmp_info"             : (".1.3.6.1.4.1.8691.10.2242.10.1.1",
                [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11" ]
                                )
}

# DIOEntry
# dioIndex Integer32 (0..11) 	"The channel dio index."
# dioType Integer32 (0..1)  	"The channel dio type. 0=DI, DO=1, AI=2"
# dioMode Integer32 (0..1)  	"The channel dio mode. 0=DI, 1=Event Counter"
# dioStatus Unsigned32 (0..4294967295)	"The channel dio(di/do) status. 0=Off, 1=On in DI/DO mode or N=Count in DO counter mode
# dioFilter Integer32 (1..65535) "The channel dio(di) counter filter. unit=0.5ms"
# dioTrigger Integer32 (0..1)	"The channel dio(di) counter trigger level. 0=L2H, 1=H2L"
# dioCntStart Integer32 (0..1)	"The channel dio(do) counter start/stop. 0=stop, 1=start"
# dioPulseStart	Integer32 (0..1) "The channel dio(do) pulse start/stop. 0=stop, 1=start"
# dioPulseONWidth Unsigned32 (1..4294967295) "The channel dio(do) signal ON width. unit=0.5ms"
# dioPulseOFFWidth Unsigned32 (1..4294967295) "The channel dio(do) signal OFF width. unit=0.5ms"
