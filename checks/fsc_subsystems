#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de


def inventory_fsc_subsystems(info):
    return [ (line[0], line[1], (int(line[1]) * 0.9, int(line[1]) * 0.8)) for line in info if int(line[1]) > 0 ]

def check_fsc_subsystems(item, params, info):
    warn, crit = params
    for line in info: # , value1, value2 in info:
        name = line[0]
        if name != item: continue
        status = int(line[1])
        statusname = { 1:'ok', 2:'degraded', 3:'error', 4:'failed', 5:'unknown-init'}.get(status, 'invalid')
        if status == 1 or status == 5:
            return (0, "%s - no problems" % statusname)
        elif status >= 2 and status <= 4:
            return (2, "%s" % statusname)
        else:
            return (3, "unknown status %d" % status)

    return (3, "Subsystem %s not found in SNMP data" % item)


check_info["fsc_subsystems"] = {
    'check_function':          check_fsc_subsystems,
    'inventory_function':      inventory_fsc_subsystems,
    'service_description':     'FSC %s',
    'snmp_info':               ('.1.3.6.1.4.1.231.2.10.2.11.3.1.1', [2, 3]),
    'snmp_scan_function':      lambda oid: \
     oid(".1.3.6.1.4.1.231.2.10.2.1.1.0"),
}
