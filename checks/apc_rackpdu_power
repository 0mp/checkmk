#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de


# Originally written / contributed by Dave Cundiff


def inventory_apc_rackpdu_power(checkname, info):
   inventory = []
   # What is the "host" here?
   for host, amperage, min, max in info:
      inventory.append( (host, None) )
   return inventory

def check_apc_rackpdu_power(item, _no_params, info):
   for host, raw_amperage, min, max in info:
      amperage = float(raw_amperage) / 10
      if host == item:
         perfdata = [ ( "amperage", amperage, max ) ]
         if amperage >= max:
            return (2, "Amperage: %f - Overload possible" % amperage, perfdata)
         else:
            return (0, "Amperage: %f" % amperage, perfdata)
   return (3, "Something went wrong")



# Look for the APC management module and then dive into it's rackpdu tree

check_info["apc_rackpdu_power"] = {
    'check_function':          check_apc_rackpdu_power,
    'inventory_function':      inventory_apc_rackpdu_power,
    'service_description':     'PDU %s',
    'has_perfdata':            True,
    'snmp_info':               ('.1.3.6.1.4.1.318.1.1.12', ['1.1.0', '2.3.1.1.2.1', '2.2.1.1.3.1', '2.2.1.1.4.1']),
    'snmp_scan_function':      lambda oid: \
     oid(".1.3.6.1.2.1.1.1.0").lower().startswith("apc web/snmp") \
     and oid(".1.3.6.1.4.1.318.1.1.12.1.1.0"),
}
