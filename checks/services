#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |                     _           _           _                    |
# |                  __| |_  ___ __| |__  _ __ | |__                 |
# |                 / _| ' \/ -_) _| / / | '  \| / /                 |
# |                 \__|_||_\___\__|_\_\_|_|_|_|_\_\                 |
# |                                   |___|                          |
# |              _   _   __  _         _        _ ____               |
# |             / | / | /  \| |__  ___| |_ __ _/ |__  |              |
# |             | |_| || () | '_ \/ -_)  _/ _` | | / /               |
# |             |_(_)_(_)__/|_.__/\___|\__\__,_|_|/_/                |
# |                                            check_mk 1.1.0beta17  |
# |                                                                  |
# | Copyright Mathias Kettner 2009             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
# 
# This file is part of check_mk 1.1.0beta17.
# The official homepage is at http://mathias-kettner.de/check_mk.
# 
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# List all services to auto-detect here:
inventory_services = []

def check_windows_services(item, params, info):
    for line in info:
        name = line[0]
        if name == item:
            state = line[1]
            displayname = " ".join(line[2:])
            if state == 'running':
                return (0, "OK - running: %s" % displayname)
            else:
                return (2, "CRITICAL - %s: %s" % (state, displayname))
    return (3, "UNKNOWN - service not found")

# AeLookupSvc        running  Application Experience Lookup Service
# Alerter            stopped  Alerter
# ALG                stopped  Application Layer Gateway Service
# AppMgmt            stopped  Application Management
# appmgr             running  Remote Server Manager
# aspnet_state       stopped  ASP.NET State Service
# AudioSrv           running  Windows Audio
# BITS               stopped  Background Intelligent Transfer Service
# Browser            running  Computer Browser
# cimlistener        running  IBM Director CIM Listener
def inventory_windows_services(checkname, info):
    inventory = []
    for line in info:
        name = line[0]
        state = line[1]
        if state == 'running' and name in inventory_services:
            inventory.append((name, '""', None))
    return inventory
    

check_info['services'] = (check_windows_services, "service_%s", 0, inventory_windows_services)
