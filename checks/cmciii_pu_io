#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_cmciii_pu_io(info):
    inventory = []
    for oid_num in range(0, len(info[0])):
        if re.match('^\d:Off / \d:On$',info[0][oid_num]):
            item = info[0][oid_num-2]
            item = oid_num-2
            inventory.append((item, None))
    return inventory

def check_cmciii_pu_io(item, params, info):

    if info[0][item]:
        descr = info[0][item]
        value = info[0][item+1]
        logic = info[0][item+2]
        delay = info[0][item+2]
        status = info[0][item+3]
        if value == "0":
            state = 0
            sym = ""
        else:
            state = 1
            sym = "(!)"
        infotext =  "Input: %s, Value %s%s, Logic %s, Delay %s, Status %s" \
            % ( descr, value, sym, logic, delay, status )
    else:
        infotext = "no valid SNMP data found for unit"
        state = 3

    return (state, infotext)

check_info['cmciii_pu_io'] = {
    "check_function"      : check_cmciii_pu_io,
    "inventory_function"  : inventory_cmciii_pu_io,
    "has_perfdata"        : False,
    "service_description" : "PU IO Unit %s",
    "snmp_scan_function"  : lambda oid: "Rittal CMC III PU" in oid(".1.3.6.1.2.1.1.1.0"),
    "snmp_info"           : (
      ".1.3.6.1.4.1.2606.7.4.2.2.1.10.1", range(17,33) 
    )
}

