#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de



def inventory_statgrab_cpu(info):
    if len(info) > 1:
        return [(None, {})]


def check_statgrab_cpu(item, params, info):
    if not params:
        params = {}
    user = 0
    nice = 0
    for var, value in info:
        if var == 'user':
            user = int(value)
        elif var == 'nice':
            nice = int(value)
        elif var == 'kernel':
            system = int(value)
        elif var == 'idle':
            idle = int(value)
        elif var == 'iowait':
            wait = int(value)

    # user, nice, system, idle, iowait, hw-int, sw-int, steal
    values = [ user, nice, system, idle, wait, 0, 0, 0 ]

    # No return cause of the use of yield
    return check_cpu_util_unix(values, params)


check_info["statgrab_cpu"] = {
    'check_function':       check_statgrab_cpu,
    'inventory_function':   inventory_statgrab_cpu,
    'service_description':  'CPU utilization',
    'has_perfdata':         True,
    'includes':             ['cpu_util.include'],
    'group':                'cpu_iowait',
}
