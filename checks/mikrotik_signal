#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

mikrotik_signal_default_levels = ( 80, 70 )

def inventory_mikrotik_signal(info):
    inventory = []
    for network, strength, mode in info:
        inventory.append((network, "mikrotik_signal_default_levels"))
    return inventory

def check_mikrotik_signal(item, params, info):
    warn, crit = params
    for network, strength, mode in info:
        if network == item:
            strength = saveint(strength)
            quality = "0"
            if strength <= -50 or strength >= -100:
                quality = 2 * ( strength + 100 )
            if quality > 100:
                quality = 100

            infotext = "Signal quality %d%% (%ddBm). Mode is: %s" % ( quality, strength, mode )
            perf = [ ("quality", quality, warn, crit) ]
            if quality <= crit:
                return 2, infotext, perf
            if quality <= warn:
                return 1, infotext, perf
            return 0, infotext, perf

    return 3, "Network not found"

check_info["mikrotik_signal"] = {
    "group"                 : "signal_quality",
    "check_function"        : check_mikrotik_signal,
    "inventory_function"    : inventory_mikrotik_signal,
    "service_description"   : "Signal %s",
    "has_perfdata"          : True,
    "snmp_info"             : ( ".1.3.6.1.4.1.14988.1.1.1.1.1", [ "5.2", "4.2", "8.2" ] ),
    "snmp_scan_function"    : lambda oid: ".1.3.6.1.4.1.14988.1" in oid(".1.3.6.1.2.1.1.2.0")
}
