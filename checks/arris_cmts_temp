#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

arris_cmts_temp_default_levels = ( 40, 46 )

def inventory_arris_cmts_temp(info):
    for line in info:
        # only devices with not default temperature
        if line[1] != '999':
            yield line[0], 'arris_cmts_temp_default_levels'


def check_arris_cmts_temp(item, params, info):
    for name, temp in info:
        if name == item:
            return check_temperature(int(temp), params)

    return 3, "Sensor not found in SNMP data"


check_info["arris_cmts_temp"] = {
    "check_function"        : check_arris_cmts_temp,
    "inventory_function"    : inventory_arris_cmts_temp,
    "service_description"   : "Temperature Module %s",
    "has_perfdata"          : True,
    "snmp_scan_function"    : arris_cmts_scan_function,
    "snmp_info"             : ( ".1.3.6.1.4.1.4998.1.1.10.1.4.2.1", [
                                          3, # cardName
                                          29, # Card Temperature
                                          ] ),
    "group"                 : "hw_temperature",
    "includes"              : [ "arris_cmts.include", "temperature.include" ],
}

