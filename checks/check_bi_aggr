#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

def check_bi_aggr_arguments(params):
    base_url, aggr_name, username, secret, opt_params = params
    args = ''

    args += ' -b %s' % quote_shell_string(base_url)
    args += ' -a %s' % quote_shell_string(aggr_name)
    args += ' -u %s' % quote_shell_string(username)
    args += ' -s %s' % quote_shell_string(secret)

    if "auth_mode" in opt_params:
        args += ' -m %s' % quote_shell_string(opt_params['auth_mode'])

    if "timeout" in opt_params:
        args += ' -t %d' % opt_params['timeout']

    if opt_params.get("in_downtime"):
        args += ' --in-downtime %s' % opt_params['in_downtime']

    if opt_params.get("acknowledged"):
        args += ' --acknowledged %s' % opt_params['acknowledged']

    return args


active_check_info['bi_aggr'] = {
    "command_line"        : '$USER1$/check_bi_aggr $ARG1$',
    "argument_function"   : check_bi_aggr_arguments,
    "service_description" : lambda params: "Aggr %s" % params[1],
    "has_perfdata"        : False,
}

