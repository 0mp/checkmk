#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_cmciii_psm_current(info):
    inventory = []
    for line in info:
        num = 0
        for val in line:
            if val == "PSM8 C13" or val == "PSM6 C13/Schuko":
                idd = str(int(line[0]) -1)
                inventory.append((str(num)+"-"+idd, None))
            num += 1
    return inventory

def check_cmciii_psm_current(item, params, info):
    bus, unit = map(int,item.split("-"))
    descr = info[unit-1][bus]
    typ = info[unit][bus]
    current = info[unit+4][bus]
    max_current = info[unit+5][bus]
    min_current = info[unit+6][bus]
    status = info[unit+7][bus].lower()
    if status == "ok":
        state = 0
    else:
        state = 2
    strom, einheit = current.split(" ")
    max = max_current.split(" ")[0]
    min = min_current.split(" ")[0]

    perfdata = [ (strom+einheit, 0, 0, min, max) ]

    infotext =  "Type %s, Name %s, State %s, Current %s (%s/%s)" \
        % ( typ, descr, status, current, min_current, max_current)

    return (state, infotext, perfdata)


check_info['cmciii_psm_current'] = {
    "check_function"      : check_cmciii_psm_current,
    "inventory_function"  : inventory_cmciii_psm_current,
    "has_perfdata"        : True,
    "service_description" : "PSM %s",
    "snmp_scan_function"  : lambda oid: "Rittal CMC III PU" in oid(".1.3.6.1.2.1.1.1.0"),
    "snmp_info"           : (
      ".1.3.6.1.4.1.2606.7.4.2.2.1.10", [OID_END]+range(1,9)    # read complete subtree :(
    )
}

