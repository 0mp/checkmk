#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2016             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_checkpoint_ha_status(info):
    if info:
        return [(None, None)]


def check_checkpoint_ha_status(item, params, info):
    if info:
        installed, major, minor, started, state, block_state, stat_code, stat_long = info[0]

        status = 0
        messages = []
        if installed != "1":
            messages.append("not installed")
        else:
            messages.append("installed (v%s.%s)" % (major, minor))

            messages.append(state)

            if started == "yes":
                messages.append("started")
            else:
                messages.append("stopped")

            if block_state != "OK":
                messages.append("blocking state: %s" % block_state)
                status = 2

            if stat_code != "0":
                messages.append("status: %s" % stat_long)
                status = 2

        return status, ", ".join(messages)


check_info['checkpoint_ha_status'] = {
    'check_function'         : check_checkpoint_ha_status,
    'inventory_function'     : inventory_checkpoint_ha_status,
    'service_description'    : "HA Status",
    'snmp_scan_function'     : scan_checkpoint,
    'snmp_info'              : ( '.1.3.6.1.4.1.2620.1.5', [2,    # haInstalled
                                                           3,    # haVerMajor
                                                           4,    # haVerMinor
                                                           5,    # haStarted
                                                           6,    # haState
                                                           7,    # haBlockState
                                                           101,  # haStatCode
                                                           103,  # haStatLong
                                                           ]),
    'includes'               : [ 'checkpoint.include' ],
}

