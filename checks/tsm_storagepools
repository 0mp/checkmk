#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

# <<<tsm_storagepool>>>
# tsmfarm2      Bkup      LTOBACK               1399378.64
# tsmfarm2      Arch      LTOARCHCOPY            157288.14


def inventory_tsm_storagepools(info):
    inventory = []
    for inst, stype, name, size in info:
        if inst == "default":
            item = name
        else:
            item = inst + " / " + name
        inventory.append((item, None))
    return inventory

def check_tsm_storagepools(item, _no_params, info):
    for inst, stype, name, size in info:
        if item == name or item == inst + " / " + name:
            return (0, "%s used - %s" %
                (get_bytes_human_readable(int(float(size) * 1024 * 1024)), stype))
    return (3, "no such storage pool", [ ("used", float(size)) ])


check_info['tsm_storagepools'] = {
    "check_function"          : check_tsm_storagepools,
    "inventory_function"      : inventory_tsm_storagepools,
    "service_description"     : "TSM Storagepool %s",
    "has_perfdata"            : True,
    "group"                   : "tsm_storagepools",
    "default_levels_variable" : "tsm_storagepools_default_levels",
}

