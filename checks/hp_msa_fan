#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

# <<<hp_msa_fan>>>
# fan 1 durable-id fan_1.1
# fan 1 name Fan Loc:left-PSU 1
# fan 1 location Enclosure 1 - Left
# fan 1 status Up
# fan 1 status-numeric 0
# fan 1 speed 3760
# fan 1 position Left
# fan 1 position-numeric 0
# fan 1 serial-number
# fan 1 fw-revision
# fan 1 hw-revision
# fan 1 health OK
# fan 1 health-numeric 0
# fan 1 health-reason
# fan 1 health-recommendation
# fan 2 durable-id fan_1.2
# fan 2 name Fan Loc:right-PSU 2
# fan 2 location Enclosure 1 - Right
# fan 2 status Up
# fan 2 status-numeric 0
# fan 2 speed 3880
# fan 2 position Right
# fan 2 position-numeric 1
# fan 2 serial-number
# fan 2 fw-revision
# fan 2 hw-revision
# fan 2 health OK
# fan 2 health-numeric 0
# fan 2 health-reason
# fan 2 health-recommendation

def inventory_hp_msa_fan(parsed):
    for item in parsed.keys():
        yield item, None


def check_hp_msa_fan(item, params, parsed):
    if item in parsed:
        fan_status        = parsed[item]["status"]
        fan_speed         = int(parsed[item]["speed"])
        fan_health        = parsed[item]["health"]
        fan_health_reason = parsed[item].get("health-reason", "")

        yield hp_msa_state_map[fan_status], \
              "Status: %s, speed: %s RPM" % (fan_status, fan_speed)

        if hp_msa_state_map[fan_health] > 0 and fan_health_reason:
            yield hp_msa_state_map[fan_health], "health: %s (%s)" % \
                  (fan_health, fan_health_reason)


check_info['hp_msa_fan'] = {
    'parse_function'        : parse_hp_msa,
    'inventory_function'    : inventory_hp_msa_fan,
    'check_function'        : check_hp_msa_fan,
    'service_description'   : 'Fan %s',
    'includes'              : [ "hp_msa.include" ],
}
