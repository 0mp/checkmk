#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# Copyright by Mathias Kettner and Mathias Kettner GmbH.  All rights reserved.
#
# Check_MK is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.
#
# Check_MK is  distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY  or  FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have  received  a copy of the  GNU  General Public
# License along with Check_MK.  If  not, email to mk@mathias-kettner.de
# or write to the postal address provided at www.mathias-kettner.de

# <<<symantec_av_updates>>>
# 15.05.2015 rev. 1

# <<<symantec_av_updates>>>
# 05/15/2015 rev. 1

symantec_av_updates_default_levels = ( 259200, 345600 )


def inventory_symantec_av_updates(info):
    return [( None, 'symantec_av_updates_default_levels' )]


def check_symantec_av_updates( _no_item, params, info):
    warn, crit = params
    last_text = info[0][0]
    if '/' in last_text:
        last_broken = time.strptime(last_text, "%m/%d/%Y")
    else:
        last_broken = time.strptime(last_text, "%d.%m.%Y")

    last_timestamp = time.mktime(last_broken)
    age = time.time() - last_timestamp

    message = "%s since last update" % get_age_human_readable(age)
    if age >= crit:
        return 2, message
    if age >= warn:
        return 1, message
    return 0, message


check_info["symantec_av_updates"] = {
    "check_function"        : check_symantec_av_updates,
    "group"                 : "antivir_update_age",
    "inventory_function"    : inventory_symantec_av_updates,
    "service_description"   : "AV Update Status",
    "has_perfdata"          : False,
}

